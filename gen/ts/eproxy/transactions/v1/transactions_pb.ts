// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file eproxy/transactions/v1/transactions.proto (package eproxy.transactions.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import type { Blockchain, Pagination } from "../../common/v1/common_pb";
import { file_eproxy_common_v1_common } from "../../common/v1/common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file eproxy/transactions/v1/transactions.proto.
 * @deprecated
 */
export const file_eproxy_transactions_v1_transactions: GenFile = /*@__PURE__*/
  fileDesc("CillcHJveHkvdHJhbnNhY3Rpb25zL3YxL3RyYW5zYWN0aW9ucy5wcm90bxIWZXByb3h5LnRyYW5zYWN0aW9ucy52MSJaCg5HZXRJbmZvUmVxdWVzdBIRCgRoYXNoGAEgASgJQgPgQQISNQoKYmxvY2tjaGFpbhgCIAEoDjIcLmVwcm94eS5jb21tb24udjEuQmxvY2tjaGFpbkID4EECIlQKD0dldEluZm9SZXNwb25zZRJBChB0cmFuc2FjdGlvbl9pbmZvGAEgASgLMicuZXByb3h5LnRyYW5zYWN0aW9ucy52MS5UcmFuc2FjdGlvbkluZm8i2QIKBUV2ZW50EhEKBHR5cGUYASABKAlIAIgBARIaCg1vcmlnaW5hbF9kYXRhGAIgASgMSAGIAQESGQoMZW5jb2RlZF9kYXRhGAMgASgMSAKIAQESIAoTYmxvY2tjaGFpbl91bmlxX2tleRgEIAEoCUgDiAEBEhsKDmFzc2V0X2lkZW50aWZ5GAUgASgJSASIAQESGQoMYWRkcmVzc19mcm9tGAYgASgJSAWIAQESFwoKYWRkcmVzc190bxgHIAEoCUgGiAEBEhIKBXZhbHVlGAggASgJSAeIAQFCBwoFX3R5cGVCEAoOX29yaWdpbmFsX2RhdGFCDwoNX2VuY29kZWRfZGF0YUIWChRfYmxvY2tjaGFpbl91bmlxX2tleUIRCg9fYXNzZXRfaWRlbnRpZnlCDwoNX2FkZHJlc3NfZnJvbUINCgtfYWRkcmVzc190b0IICgZfdmFsdWUi6wEKD0FkZHRpdGlvbmFsRGF0YRITCgZzdGF0dXMYASABKAlIAIgBARJICgl0cm9uX2RhdGEYAyABKAsyMC5lcHJveHkudHJhbnNhY3Rpb25zLnYxLkFkZHRpdGlvbmFsRGF0YS5Ucm9uRGF0YUgBiAEBGmAKCFRyb25EYXRhEhoKDWNvbnRyYWN0X3R5cGUYASABKA1IAIgBARIXCgphc3NldF90eXBlGAIgASgJSAGIAQFCEAoOX2NvbnRyYWN0X3R5cGVCDQoLX2Fzc2V0X3R5cGVCCQoHX3N0YXR1c0IMCgpfdHJvbl9kYXRhItQDCg9UcmFuc2FjdGlvbkluZm8SDAoEaGFzaBgBIAEoCRIUCgxibG9ja19oZWlnaHQYAiABKAQSFQoNY29uZmlybWF0aW9ucxgDIAEoBBIZCgxhZGRyZXNzX2Zyb20YBCABKAlIAIgBARIXCgphZGRyZXNzX3RvGAUgASgJSAGIAQESEgoFdmFsdWUYBiABKAlIAogBARIQCgNmZWUYByABKAlIA4gBARIbCg5hc3NldF9pZGVudGlmeRgIIAEoCUgEiAEBEg0KBWluZGV4GAkgASgNEkgKFGFkZGl0aW9uYWxfZGF0YV9mdWxsGAogASgLMiouZXByb3h5LnRyYW5zYWN0aW9ucy52MS5BZGRpdGlvbmFsRGF0YUZ1bGwSLQoGZXZlbnRzGAsgAygLMh0uZXByb3h5LnRyYW5zYWN0aW9ucy52MS5FdmVudBIuCgpjcmVhdGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBISCgppbl9tZW1wb29sGA0gASgIQg8KDV9hZGRyZXNzX2Zyb21CDQoLX2FkZHJlc3NfdG9CCAoGX3ZhbHVlQgYKBF9mZWVCEQoPX2Fzc2V0X2lkZW50aWZ5Is0LChJBZGRpdGlvbmFsRGF0YUZ1bGwSEwoGc3RhdHVzGAEgASgJSACIAQESWgoRYml0Y29pbl9saWtlX2RhdGEYAiABKAsyOi5lcHJveHkudHJhbnNhY3Rpb25zLnYxLkFkZGl0aW9uYWxEYXRhRnVsbC5CaXRjb2luTGlrZURhdGFIAYgBARJTCg1ldGhlcmV1bV9kYXRhGAMgASgLMjcuZXByb3h5LnRyYW5zYWN0aW9ucy52MS5BZGRpdGlvbmFsRGF0YUZ1bGwuRXRoZXJldW1EYXRhSAKIAQESSwoJdHJvbl9kYXRhGAQgASgLMjMuZXByb3h5LnRyYW5zYWN0aW9ucy52MS5BZGRpdGlvbmFsRGF0YUZ1bGwuVHJvbkRhdGFIA4gBARqTAQoPQml0Y29pbkxpa2VEYXRhEgsKA2hleBgBIAEoCRIMCgRoYXNoGAIgASgJEgwKBHNpemUYAyABKA0SDgoGdl9zaXplGAQgASgNEg4KBndlaWdodBgFIAEoDRIPCgd2ZXJzaW9uGAYgASgNEhEKCWxvY2tfdGltZRgHIAEoDRITCgtpc19jb2luYmFzZRgIIAEoCBqJAgoMRXRoZXJldW1EYXRhEhAKCGNoYWluX2lkGAEgASgFEhAKCHR4bl90eXBlGAIgASgFEgsKA2dhcxgDIAEoAxIRCglnYXNfcHJpY2UYBCABKAMSEAoIZ2FzX3VzZWQYBSABKAMSFwoPbWF4X2ZlZV9wZXJfZ2FzGAYgASgDEiAKGG1heF9wcmlvcml0eV9mZWVfcGVyX2dhcxgHIAEoAxIbChNjdW11bGF0aXZlX2dhc191c2VkGAggASgDEhsKE2VmZmVjdGl2ZV9nYXNfcHJpY2UYCSABKAMSDQoFbm9uY2UYCiABKAMSCQoBdhgLIAEoDBIJCgFyGAwgASgMEgkKAXMYDSABKAwawAUKCFRyb25EYXRhEhkKDGVuZXJneV91c2FnZRgBIAEoCUgAiAEBEhcKCmVuZXJneV9mZWUYAiABKAlIAYgBARIgChNvcmlnaW5fZW5lcmd5X3VzYWdlGAMgASgJSAKIAQESHwoSZW5lcmd5X3VzYWdlX3RvdGFsGAQgASgJSAOIAQESFgoJbmV0X3VzYWdlGAUgASgJSASIAQESFAoHbmV0X2ZlZRgGIAEoCUgFiAEBEiEKFGVuZXJneV9wZW5hbHR5X3RvdGFsGAcgASgJSAaIAQESHAoPd2l0aGRyYXdfYW1vdW50GAggASgJSAeIAQESHAoPdW5mcmVlemVfYW1vdW50GAkgASgJSAiIAQESIwoWd2l0aGRyYXdfZXhwaXJlX2Ftb3VudBgKIAEoCUgJiAEBEiMKFnJlc291cmNlX2NvbnRyYWN0X3R5cGUYCyABKAlICogBARIaCg1yZXNvdXJjZV90eXBlGAwgASgJSAuIAQESGwoOcmVzb3VyY2VfdmFsdWUYDSABKAlIDIgBARIYCgtzdGFja2VkX3RyeBgOIAEoCUgNiAEBQg8KDV9lbmVyZ3lfdXNhZ2VCDQoLX2VuZXJneV9mZWVCFgoUX29yaWdpbl9lbmVyZ3lfdXNhZ2VCFQoTX2VuZXJneV91c2FnZV90b3RhbEIMCgpfbmV0X3VzYWdlQgoKCF9uZXRfZmVlQhcKFV9lbmVyZ3lfcGVuYWx0eV90b3RhbEISChBfd2l0aGRyYXdfYW1vdW50QhIKEF91bmZyZWV6ZV9hbW91bnRCGQoXX3dpdGhkcmF3X2V4cGlyZV9hbW91bnRCGQoXX3Jlc291cmNlX2NvbnRyYWN0X3R5cGVCEAoOX3Jlc291cmNlX3R5cGVCEQoPX3Jlc291cmNlX3ZhbHVlQg4KDF9zdGFja2VkX3RyeEIJCgdfc3RhdHVzQhQKEl9iaXRjb2luX2xpa2VfZGF0YUIQCg5fZXRoZXJldW1fZGF0YUIMCgpfdHJvbl9kYXRhIsgDCgtUcmFuc2FjdGlvbhIMCgRoYXNoGAEgASgJEhQKDGJsb2NrX2hlaWdodBgCIAEoBBIVCg1jb25maXJtYXRpb25zGAMgASgEEhkKDGFkZHJlc3NfZnJvbRgEIAEoCUgAiAEBEhcKCmFkZHJlc3NfdG8YBSABKAlIAYgBARISCgV2YWx1ZRgGIAEoCUgCiAEBEhAKA2ZlZRgHIAEoCUgDiAEBEhsKDmFzc2V0X2lkZW50aWZ5GAggASgJSASIAQESDQoFaW5kZXgYCSABKA0SQAoPYWRkaXRpb25hbF9kYXRhGAogASgLMicuZXByb3h5LnRyYW5zYWN0aW9ucy52MS5BZGR0aXRpb25hbERhdGESLQoGZXZlbnRzGAsgAygLMh0uZXByb3h5LnRyYW5zYWN0aW9ucy52MS5FdmVudBIuCgpjcmVhdGVkX2F0GAwgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBISCgppbl9tZW1wb29sGA0gASgIQg8KDV9hZGRyZXNzX2Zyb21CDQoLX2FkZHJlc3NfdG9CCAoGX3ZhbHVlQgYKBF9mZWVCEQoPX2Fzc2V0X2lkZW50aWZ5ItoHCgtGaW5kUmVxdWVzdBI1CgpibG9ja2NoYWluGAEgASgOMhwuZXByb3h5LmNvbW1vbi52MS5CbG9ja2NoYWluQgPgQQISNQoKcGFnaW5hdGlvbhgCIAEoCzIcLmVwcm94eS5jb21tb24udjEuUGFnaW5hdGlvbkID4EECEhMKBnNlYXJjaBgDIAEoCUgAiAEBEhEKBGhhc2gYBCABKAlIAYgBARIZCgxibG9ja19oZWlnaHQYBSABKARIAogBARIUCgdhZGRyZXNzGAYgASgJSAOIAQESGwoOYXNzZXRfaWRlbnRpZnkYByABKAlIBIgBARJOCg5iaXRjb2luX3BhcmFtcxgIIAEoCzIxLmVwcm94eS50cmFuc2FjdGlvbnMudjEuRmluZFJlcXVlc3QuQml0Y29pblBhcmFtc0gFiAEBEkgKC3Ryb25fcGFyYW1zGAkgASgLMi4uZXByb3h5LnRyYW5zYWN0aW9ucy52MS5GaW5kUmVxdWVzdC5Ucm9uUGFyYW1zSAaIAQESUAoPbGl0ZWNvaW5fcGFyYW1zGAogASgLMjIuZXByb3h5LnRyYW5zYWN0aW9ucy52MS5GaW5kUmVxdWVzdC5MaXRlY29pblBhcmFtc0gHiAEBGnsKDUJpdGNvaW5QYXJhbXMSHgoRZmlsdGVyX2J5X2FkZHJlc3MYASABKAhIAIgBARIeChFmaWx0ZXJfYnlfbWVtcG9vbBgCIAEoCEgBiAEBQhQKEl9maWx0ZXJfYnlfYWRkcmVzc0IUChJfZmlsdGVyX2J5X21lbXBvb2wahAEKClRyb25QYXJhbXMSGgoNY29udHJhY3RfdHlwZRgBIAEoDUgAiAEBEhgKC2lzX2ludGVybmFsGAIgASgISAGIAQESHgoWaXNfaW5jbHVkZV9kZXRhaWxfaW5mbxgDIAEoCEIQCg5fY29udHJhY3RfdHlwZUIOCgxfaXNfaW50ZXJuYWwafAoOTGl0ZWNvaW5QYXJhbXMSHgoRZmlsdGVyX2J5X2FkZHJlc3MYASABKAhIAIgBARIeChFmaWx0ZXJfYnlfbWVtcG9vbBgCIAEoCEgBiAEBQhQKEl9maWx0ZXJfYnlfYWRkcmVzc0IUChJfZmlsdGVyX2J5X21lbXBvb2xCCQoHX3NlYXJjaEIHCgVfaGFzaEIPCg1fYmxvY2tfaGVpZ2h0QgoKCF9hZGRyZXNzQhEKD19hc3NldF9pZGVudGlmeUIRCg9fYml0Y29pbl9wYXJhbXNCDgoMX3Ryb25fcGFyYW1zQhIKEF9saXRlY29pbl9wYXJhbXMiXAoMRmluZFJlc3BvbnNlEjIKBWl0ZW1zGAEgAygLMiMuZXByb3h5LnRyYW5zYWN0aW9ucy52MS5UcmFuc2FjdGlvbhIYChBuZXh0X3BhZ2VfZXhpc3RzGAIgASgIMsQBChNUcmFuc2FjdGlvbnNTZXJ2aWNlElEKBEZpbmQSIy5lcHJveHkudHJhbnNhY3Rpb25zLnYxLkZpbmRSZXF1ZXN0GiQuZXByb3h5LnRyYW5zYWN0aW9ucy52MS5GaW5kUmVzcG9uc2USWgoHR2V0SW5mbxImLmVwcm94eS50cmFuc2FjdGlvbnMudjEuR2V0SW5mb1JlcXVlc3QaJy5lcHJveHkudHJhbnNhY3Rpb25zLnYxLkdldEluZm9SZXNwb25zZUL1AQoaY29tLmVwcm94eS50cmFuc2FjdGlvbnMudjFCEVRyYW5zYWN0aW9uc1Byb3RvUAFaR2dpdGh1Yi5jb20vZHYtbmV0L2R2LXByb3RvL2dlbi9nby9lcHJveHkvdHJhbnNhY3Rpb25zL3YxO3RyYW5zYWN0aW9uc3YxuAEBogIDRVRYqgIWRXByb3h5LlRyYW5zYWN0aW9ucy5WMcoCFkVwcm94eVxUcmFuc2FjdGlvbnNcVjHiAiJFcHJveHlcVHJhbnNhY3Rpb25zXFYxXEdQQk1ldGFkYXRh6gIYRXByb3h5OjpUcmFuc2FjdGlvbnM6OlYxYgZwcm90bzM", [file_google_protobuf_timestamp, file_google_api_field_behavior, file_eproxy_common_v1_common]);

/**
 * @generated from message eproxy.transactions.v1.GetInfoRequest
 * @deprecated
 */
export type GetInfoRequest = Message<"eproxy.transactions.v1.GetInfoRequest"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  /**
   * @generated from field: eproxy.common.v1.Blockchain blockchain = 2;
   */
  blockchain: Blockchain;
};

/**
 * Describes the message eproxy.transactions.v1.GetInfoRequest.
 * Use `create(GetInfoRequestSchema)` to create a new message.
 * @deprecated
 */
export const GetInfoRequestSchema: GenMessage<GetInfoRequest> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 0);

/**
 * @generated from message eproxy.transactions.v1.GetInfoResponse
 * @deprecated
 */
export type GetInfoResponse = Message<"eproxy.transactions.v1.GetInfoResponse"> & {
  /**
   * @generated from field: eproxy.transactions.v1.TransactionInfo transaction_info = 1;
   */
  transactionInfo?: TransactionInfo;
};

/**
 * Describes the message eproxy.transactions.v1.GetInfoResponse.
 * Use `create(GetInfoResponseSchema)` to create a new message.
 * @deprecated
 */
export const GetInfoResponseSchema: GenMessage<GetInfoResponse> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 1);

/**
 * @generated from message eproxy.transactions.v1.Event
 * @deprecated
 */
export type Event = Message<"eproxy.transactions.v1.Event"> & {
  /**
   * event type: transfer / delegate / reclaim
   *
   * @generated from field: optional string type = 1;
   */
  type?: string;

  /**
   * @generated from field: optional bytes original_data = 2;
   */
  originalData?: Uint8Array;

  /**
   * @generated from field: optional bytes encoded_data = 3;
   */
  encodedData?: Uint8Array;

  /**
   * @generated from field: optional string blockchain_uniq_key = 4;
   */
  blockchainUniqKey?: string;

  /**
   * @generated from field: optional string asset_identify = 5;
   */
  assetIdentify?: string;

  /**
   * @generated from field: optional string address_from = 6;
   */
  addressFrom?: string;

  /**
   * @generated from field: optional string address_to = 7;
   */
  addressTo?: string;

  /**
   * @generated from field: optional string value = 8;
   */
  value?: string;
};

/**
 * Describes the message eproxy.transactions.v1.Event.
 * Use `create(EventSchema)` to create a new message.
 * @deprecated
 */
export const EventSchema: GenMessage<Event> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 2);

/**
 * @generated from message eproxy.transactions.v1.AddtitionalData
 * @deprecated
 */
export type AddtitionalData = Message<"eproxy.transactions.v1.AddtitionalData"> & {
  /**
   * @generated from field: optional string status = 1;
   */
  status?: string;

  /**
   * @generated from field: optional eproxy.transactions.v1.AddtitionalData.TronData tron_data = 3;
   */
  tronData?: AddtitionalData_TronData;
};

/**
 * Describes the message eproxy.transactions.v1.AddtitionalData.
 * Use `create(AddtitionalDataSchema)` to create a new message.
 * @deprecated
 */
export const AddtitionalDataSchema: GenMessage<AddtitionalData> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 3);

/**
 * Unique key for transaction in blockhain for the same hash, like sequence
 * for bitcoin inputs and outputs
 *
 * @generated from message eproxy.transactions.v1.AddtitionalData.TronData
 * @deprecated
 */
export type AddtitionalData_TronData = Message<"eproxy.transactions.v1.AddtitionalData.TronData"> & {
  /**
   * @generated from field: optional uint32 contract_type = 1;
   */
  contractType?: number;

  /**
   * @generated from field: optional string asset_type = 2;
   */
  assetType?: string;
};

/**
 * Describes the message eproxy.transactions.v1.AddtitionalData.TronData.
 * Use `create(AddtitionalData_TronDataSchema)` to create a new message.
 * @deprecated
 */
export const AddtitionalData_TronDataSchema: GenMessage<AddtitionalData_TronData> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 3, 0);

/**
 * @generated from message eproxy.transactions.v1.TransactionInfo
 * @deprecated
 */
export type TransactionInfo = Message<"eproxy.transactions.v1.TransactionInfo"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  /**
   * @generated from field: uint64 block_height = 2;
   */
  blockHeight: bigint;

  /**
   * @generated from field: uint64 confirmations = 3;
   */
  confirmations: bigint;

  /**
   * @generated from field: optional string address_from = 4;
   */
  addressFrom?: string;

  /**
   * @generated from field: optional string address_to = 5;
   */
  addressTo?: string;

  /**
   * @generated from field: optional string value = 6;
   */
  value?: string;

  /**
   * @generated from field: optional string fee = 7;
   */
  fee?: string;

  /**
   * @generated from field: optional string asset_identify = 8;
   */
  assetIdentify?: string;

  /**
   * @generated from field: uint32 index = 9;
   */
  index: number;

  /**
   * @generated from field: eproxy.transactions.v1.AdditionalDataFull additional_data_full = 10;
   */
  additionalDataFull?: AdditionalDataFull;

  /**
   * @generated from field: repeated eproxy.transactions.v1.Event events = 11;
   */
  events: Event[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool in_mempool = 13;
   */
  inMempool: boolean;
};

/**
 * Describes the message eproxy.transactions.v1.TransactionInfo.
 * Use `create(TransactionInfoSchema)` to create a new message.
 * @deprecated
 */
export const TransactionInfoSchema: GenMessage<TransactionInfo> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 4);

/**
 * @generated from message eproxy.transactions.v1.AdditionalDataFull
 * @deprecated
 */
export type AdditionalDataFull = Message<"eproxy.transactions.v1.AdditionalDataFull"> & {
  /**
   * @generated from field: optional string status = 1;
   */
  status?: string;

  /**
   * @generated from field: optional eproxy.transactions.v1.AdditionalDataFull.BitcoinLikeData bitcoin_like_data = 2;
   */
  bitcoinLikeData?: AdditionalDataFull_BitcoinLikeData;

  /**
   * @generated from field: optional eproxy.transactions.v1.AdditionalDataFull.EthereumData ethereum_data = 3;
   */
  ethereumData?: AdditionalDataFull_EthereumData;

  /**
   * @generated from field: optional eproxy.transactions.v1.AdditionalDataFull.TronData tron_data = 4;
   */
  tronData?: AdditionalDataFull_TronData;
};

/**
 * Describes the message eproxy.transactions.v1.AdditionalDataFull.
 * Use `create(AdditionalDataFullSchema)` to create a new message.
 * @deprecated
 */
export const AdditionalDataFullSchema: GenMessage<AdditionalDataFull> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 5);

/**
 * @generated from message eproxy.transactions.v1.AdditionalDataFull.BitcoinLikeData
 * @deprecated
 */
export type AdditionalDataFull_BitcoinLikeData = Message<"eproxy.transactions.v1.AdditionalDataFull.BitcoinLikeData"> & {
  /**
   * @generated from field: string hex = 1;
   */
  hex: string;

  /**
   * @generated from field: string hash = 2;
   */
  hash: string;

  /**
   * @generated from field: uint32 size = 3;
   */
  size: number;

  /**
   * @generated from field: uint32 v_size = 4;
   */
  vSize: number;

  /**
   * @generated from field: uint32 weight = 5;
   */
  weight: number;

  /**
   * @generated from field: uint32 version = 6;
   */
  version: number;

  /**
   * @generated from field: uint32 lock_time = 7;
   */
  lockTime: number;

  /**
   * @generated from field: bool is_coinbase = 8;
   */
  isCoinbase: boolean;
};

/**
 * Describes the message eproxy.transactions.v1.AdditionalDataFull.BitcoinLikeData.
 * Use `create(AdditionalDataFull_BitcoinLikeDataSchema)` to create a new message.
 * @deprecated
 */
export const AdditionalDataFull_BitcoinLikeDataSchema: GenMessage<AdditionalDataFull_BitcoinLikeData> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 5, 0);

/**
 * @generated from message eproxy.transactions.v1.AdditionalDataFull.EthereumData
 * @deprecated
 */
export type AdditionalDataFull_EthereumData = Message<"eproxy.transactions.v1.AdditionalDataFull.EthereumData"> & {
  /**
   * @generated from field: int32 chain_id = 1;
   */
  chainId: number;

  /**
   * @generated from field: int32 txn_type = 2;
   */
  txnType: number;

  /**
   * @generated from field: int64 gas = 3;
   */
  gas: bigint;

  /**
   * @generated from field: int64 gas_price = 4;
   */
  gasPrice: bigint;

  /**
   * @generated from field: int64 gas_used = 5;
   */
  gasUsed: bigint;

  /**
   * @generated from field: int64 max_fee_per_gas = 6;
   */
  maxFeePerGas: bigint;

  /**
   * @generated from field: int64 max_priority_fee_per_gas = 7;
   */
  maxPriorityFeePerGas: bigint;

  /**
   * @generated from field: int64 cumulative_gas_used = 8;
   */
  cumulativeGasUsed: bigint;

  /**
   * @generated from field: int64 effective_gas_price = 9;
   */
  effectiveGasPrice: bigint;

  /**
   * @generated from field: int64 nonce = 10;
   */
  nonce: bigint;

  /**
   * @generated from field: bytes v = 11;
   */
  v: Uint8Array;

  /**
   * @generated from field: bytes r = 12;
   */
  r: Uint8Array;

  /**
   * @generated from field: bytes s = 13;
   */
  s: Uint8Array;
};

/**
 * Describes the message eproxy.transactions.v1.AdditionalDataFull.EthereumData.
 * Use `create(AdditionalDataFull_EthereumDataSchema)` to create a new message.
 * @deprecated
 */
export const AdditionalDataFull_EthereumDataSchema: GenMessage<AdditionalDataFull_EthereumData> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 5, 1);

/**
 * @generated from message eproxy.transactions.v1.AdditionalDataFull.TronData
 * @deprecated
 */
export type AdditionalDataFull_TronData = Message<"eproxy.transactions.v1.AdditionalDataFull.TronData"> & {
  /**
   * @generated from field: optional string energy_usage = 1;
   */
  energyUsage?: string;

  /**
   * @generated from field: optional string energy_fee = 2;
   */
  energyFee?: string;

  /**
   * @generated from field: optional string origin_energy_usage = 3;
   */
  originEnergyUsage?: string;

  /**
   * @generated from field: optional string energy_usage_total = 4;
   */
  energyUsageTotal?: string;

  /**
   * @generated from field: optional string net_usage = 5;
   */
  netUsage?: string;

  /**
   * @generated from field: optional string net_fee = 6;
   */
  netFee?: string;

  /**
   * @generated from field: optional string energy_penalty_total = 7;
   */
  energyPenaltyTotal?: string;

  /**
   * @generated from field: optional string withdraw_amount = 8;
   */
  withdrawAmount?: string;

  /**
   * @generated from field: optional string unfreeze_amount = 9;
   */
  unfreezeAmount?: string;

  /**
   * @generated from field: optional string withdraw_expire_amount = 10;
   */
  withdrawExpireAmount?: string;

  /**
   * @generated from field: optional string resource_contract_type = 11;
   */
  resourceContractType?: string;

  /**
   * @generated from field: optional string resource_type = 12;
   */
  resourceType?: string;

  /**
   * @generated from field: optional string resource_value = 13;
   */
  resourceValue?: string;

  /**
   * @generated from field: optional string stacked_trx = 14;
   */
  stackedTrx?: string;
};

/**
 * Describes the message eproxy.transactions.v1.AdditionalDataFull.TronData.
 * Use `create(AdditionalDataFull_TronDataSchema)` to create a new message.
 * @deprecated
 */
export const AdditionalDataFull_TronDataSchema: GenMessage<AdditionalDataFull_TronData> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 5, 2);

/**
 * @generated from message eproxy.transactions.v1.Transaction
 * @deprecated
 */
export type Transaction = Message<"eproxy.transactions.v1.Transaction"> & {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  /**
   * @generated from field: uint64 block_height = 2;
   */
  blockHeight: bigint;

  /**
   * @generated from field: uint64 confirmations = 3;
   */
  confirmations: bigint;

  /**
   * @generated from field: optional string address_from = 4;
   */
  addressFrom?: string;

  /**
   * @generated from field: optional string address_to = 5;
   */
  addressTo?: string;

  /**
   * @generated from field: optional string value = 6;
   */
  value?: string;

  /**
   * @generated from field: optional string fee = 7;
   */
  fee?: string;

  /**
   * @generated from field: optional string asset_identify = 8;
   */
  assetIdentify?: string;

  /**
   * @generated from field: uint32 index = 9;
   */
  index: number;

  /**
   * @generated from field: eproxy.transactions.v1.AddtitionalData additional_data = 10;
   */
  additionalData?: AddtitionalData;

  /**
   * @generated from field: repeated eproxy.transactions.v1.Event events = 11;
   */
  events: Event[];

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 12;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool in_mempool = 13;
   */
  inMempool: boolean;
};

/**
 * Describes the message eproxy.transactions.v1.Transaction.
 * Use `create(TransactionSchema)` to create a new message.
 * @deprecated
 */
export const TransactionSchema: GenMessage<Transaction> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 6);

/**
 * Find request
 *
 * @generated from message eproxy.transactions.v1.FindRequest
 * @deprecated
 */
export type FindRequest = Message<"eproxy.transactions.v1.FindRequest"> & {
  /**
   * @generated from field: eproxy.common.v1.Blockchain blockchain = 1;
   */
  blockchain: Blockchain;

  /**
   * @generated from field: eproxy.common.v1.Pagination pagination = 2;
   */
  pagination?: Pagination;

  /**
   * @generated from field: optional string search = 3;
   */
  search?: string;

  /**
   * @generated from field: optional string hash = 4;
   */
  hash?: string;

  /**
   * @generated from field: optional uint64 block_height = 5;
   */
  blockHeight?: bigint;

  /**
   * @generated from field: optional string address = 6;
   */
  address?: string;

  /**
   * @generated from field: optional string asset_identify = 7;
   */
  assetIdentify?: string;

  /**
   * @generated from field: optional eproxy.transactions.v1.FindRequest.BitcoinParams bitcoin_params = 8;
   */
  bitcoinParams?: FindRequest_BitcoinParams;

  /**
   * @generated from field: optional eproxy.transactions.v1.FindRequest.TronParams tron_params = 9;
   */
  tronParams?: FindRequest_TronParams;

  /**
   * @generated from field: optional eproxy.transactions.v1.FindRequest.LitecoinParams litecoin_params = 10;
   */
  litecoinParams?: FindRequest_LitecoinParams;
};

/**
 * Describes the message eproxy.transactions.v1.FindRequest.
 * Use `create(FindRequestSchema)` to create a new message.
 * @deprecated
 */
export const FindRequestSchema: GenMessage<FindRequest> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 7);

/**
 * @generated from message eproxy.transactions.v1.FindRequest.BitcoinParams
 * @deprecated
 */
export type FindRequest_BitcoinParams = Message<"eproxy.transactions.v1.FindRequest.BitcoinParams"> & {
  /**
   * @generated from field: optional bool filter_by_address = 1;
   */
  filterByAddress?: boolean;

  /**
   * @generated from field: optional bool filter_by_mempool = 2;
   */
  filterByMempool?: boolean;
};

/**
 * Describes the message eproxy.transactions.v1.FindRequest.BitcoinParams.
 * Use `create(FindRequest_BitcoinParamsSchema)` to create a new message.
 * @deprecated
 */
export const FindRequest_BitcoinParamsSchema: GenMessage<FindRequest_BitcoinParams> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 7, 0);

/**
 * @generated from message eproxy.transactions.v1.FindRequest.TronParams
 * @deprecated
 */
export type FindRequest_TronParams = Message<"eproxy.transactions.v1.FindRequest.TronParams"> & {
  /**
   * @generated from field: optional uint32 contract_type = 1;
   */
  contractType?: number;

  /**
   * @generated from field: optional bool is_internal = 2;
   */
  isInternal?: boolean;

  /**
   * @generated from field: bool is_include_detail_info = 3;
   */
  isIncludeDetailInfo: boolean;
};

/**
 * Describes the message eproxy.transactions.v1.FindRequest.TronParams.
 * Use `create(FindRequest_TronParamsSchema)` to create a new message.
 * @deprecated
 */
export const FindRequest_TronParamsSchema: GenMessage<FindRequest_TronParams> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 7, 1);

/**
 * @generated from message eproxy.transactions.v1.FindRequest.LitecoinParams
 * @deprecated
 */
export type FindRequest_LitecoinParams = Message<"eproxy.transactions.v1.FindRequest.LitecoinParams"> & {
  /**
   * @generated from field: optional bool filter_by_address = 1;
   */
  filterByAddress?: boolean;

  /**
   * @generated from field: optional bool filter_by_mempool = 2;
   */
  filterByMempool?: boolean;
};

/**
 * Describes the message eproxy.transactions.v1.FindRequest.LitecoinParams.
 * Use `create(FindRequest_LitecoinParamsSchema)` to create a new message.
 * @deprecated
 */
export const FindRequest_LitecoinParamsSchema: GenMessage<FindRequest_LitecoinParams> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 7, 2);

/**
 * @generated from message eproxy.transactions.v1.FindResponse
 * @deprecated
 */
export type FindResponse = Message<"eproxy.transactions.v1.FindResponse"> & {
  /**
   * @generated from field: repeated eproxy.transactions.v1.Transaction items = 1;
   */
  items: Transaction[];

  /**
   * @generated from field: bool next_page_exists = 2;
   */
  nextPageExists: boolean;
};

/**
 * Describes the message eproxy.transactions.v1.FindResponse.
 * Use `create(FindResponseSchema)` to create a new message.
 * @deprecated
 */
export const FindResponseSchema: GenMessage<FindResponse> = /*@__PURE__*/
  messageDesc(file_eproxy_transactions_v1_transactions, 8);

/**
 * TransactionsService returns information about transactions by hash and
 * address
 *
 * @generated from service eproxy.transactions.v1.TransactionsService
 * @deprecated
 */
export const TransactionsService: GenService<{
  /**
   * Find returns information about transactions list by hash, address, block
   * height and contract address
   *
   * @generated from rpc eproxy.transactions.v1.TransactionsService.Find
   */
  find: {
    methodKind: "unary";
    input: typeof FindRequestSchema;
    output: typeof FindResponseSchema;
  },
  /**
   * GetInfo returns data associated with hash on specific blockchain, mixing
   * database data with node data.
   *
   * @generated from rpc eproxy.transactions.v1.TransactionsService.GetInfo
   */
  getInfo: {
    methodKind: "unary";
    input: typeof GetInfoRequestSchema;
    output: typeof GetInfoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_eproxy_transactions_v1_transactions, 0);

