// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file manager/order/v1/order.proto (package manager.order.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import type { OrderStatus, OrderType, Pagination, ResourceKind, ResourceType } from "../../common/v1/common_pb";
import { file_manager_common_v1_common } from "../../common/v1/common_pb";
import type { Duration, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file manager/order/v1/order.proto.
 */
export const file_manager_order_v1_order: GenFile = /*@__PURE__*/
  fileDesc("ChxtYW5hZ2VyL29yZGVyL3YxL29yZGVyLnByb3RvEhBtYW5hZ2VyLm9yZGVyLnYxIp4BChBPcmRlclJlc2VydmF0aW9uEhoKEnJlc2VydmF0aW9uX2Ftb3VudBgBIAEoAxI2Cg1yZXNvdXJjZV90eXBlGAIgASgOMh8ubWFuYWdlci5jb21tb24udjEuUmVzb3VyY2VUeXBlEjYKDXJlc291cmNlX2tpbmQYAyABKA4yHy5tYW5hZ2VyLmNvbW1vbi52MS5SZXNvdXJjZUtpbmQi/AIKBU9yZGVyEhAKCG9yZGVyX2lkGAEgASgJEjAKCm9yZGVyX3R5cGUYAiABKA4yHC5tYW5hZ2VyLmNvbW1vbi52MS5PcmRlclR5cGUSNAoMb3JkZXJfc3RhdHVzGAMgASgOMh4ubWFuYWdlci5jb21tb24udjEuT3JkZXJTdGF0dXMSGAoQZXhlY3V0b3JfYWRkcmVzcxgEIAEoCRIWCg50YXJnZXRfYWRkcmVzcxgFIAEoCRITCgZhbW91bnQYBiABKANIAIgBARIwCghkdXJhdGlvbhgHIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkgBiAEBEi4KCmNyZWF0ZWRfYXQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjgKDHJlc2VydmF0aW9ucxgJIAMoCzIiLm1hbmFnZXIub3JkZXIudjEuT3JkZXJSZXNlcnZhdGlvbkIJCgdfYW1vdW50QgsKCV9kdXJhdGlvbiJPChdCYXRjaENyZWF0ZU9yZGVyUmVxdWVzdBI0CgZvcmRlcnMYASADKAsyJC5tYW5hZ2VyLm9yZGVyLnYxLkNyZWF0ZU9yZGVyUmVxdWVzdCJDChhCYXRjaENyZWF0ZU9yZGVyUmVzcG9uc2USJwoGb3JkZXJzGAEgAygLMhcubWFuYWdlci5vcmRlci52MS5PcmRlciK2AQoSQ3JlYXRlT3JkZXJSZXF1ZXN0EjAKCm9yZGVyX3R5cGUYASABKA4yHC5tYW5hZ2VyLmNvbW1vbi52MS5PcmRlclR5cGUSEwoGYW1vdW50GAIgASgDSACIAQESMAoIZHVyYXRpb24YAyABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb25IAYgBARIPCgdhZGRyZXNzGAQgASgJQgkKB19hbW91bnRCCwoJX2R1cmF0aW9uIj0KE0NyZWF0ZU9yZGVyUmVzcG9uc2USJgoFb3JkZXIYASABKAsyFy5tYW5hZ2VyLm9yZGVyLnYxLk9yZGVyIiMKD0dldE9yZGVyUmVxdWVzdBIQCghvcmRlcl9pZBgBIAEoCSI6ChBHZXRPcmRlclJlc3BvbnNlEiYKBW9yZGVyGAEgASgLMhcubWFuYWdlci5vcmRlci52MS5PcmRlciImChJDYW5jZWxPcmRlclJlcXVlc3QSEAoIb3JkZXJfaWQYASABKAkiPQoTQ2FuY2VsT3JkZXJSZXNwb25zZRImCgVvcmRlchgBIAEoCzIXLm1hbmFnZXIub3JkZXIudjEuT3JkZXIi0QIKEUxpc3RPcmRlcnNSZXF1ZXN0EjUKCm9yZGVyX3R5cGUYASABKA4yHC5tYW5hZ2VyLmNvbW1vbi52MS5PcmRlclR5cGVIAIgBARIzCgZzdGF0dXMYAiABKA4yHi5tYW5hZ2VyLmNvbW1vbi52MS5PcmRlclN0YXR1c0gBiAEBEh0KEGV4ZWN1dG9yX2FkZHJlc3MYAyABKAlIAogBARIbCg50YXJnZXRfYWRkcmVzcxgEIAEoCUgDiAEBEhEKBHBhZ2UYBSABKAVIBIgBARIWCglwYWdlX3NpemUYBiABKAVIBYgBARIQCghvcmRlcl9pZBgHIAMoCUINCgtfb3JkZXJfdHlwZUIJCgdfc3RhdHVzQhMKEV9leGVjdXRvcl9hZGRyZXNzQhEKD190YXJnZXRfYWRkcmVzc0IHCgVfcGFnZUIMCgpfcGFnZV9zaXplInAKEkxpc3RPcmRlcnNSZXNwb25zZRInCgZvcmRlcnMYASADKAsyFy5tYW5hZ2VyLm9yZGVyLnYxLk9yZGVyEjEKCnBhZ2luYXRpb24YAiABKAsyHS5tYW5hZ2VyLmNvbW1vbi52MS5QYWdpbmF0aW9uMt0DCgxPcmRlclNlcnZpY2USaQoQQmF0Y2hDcmVhdGVPcmRlchIpLm1hbmFnZXIub3JkZXIudjEuQmF0Y2hDcmVhdGVPcmRlclJlcXVlc3QaKi5tYW5hZ2VyLm9yZGVyLnYxLkJhdGNoQ3JlYXRlT3JkZXJSZXNwb25zZRJaCgtDcmVhdGVPcmRlchIkLm1hbmFnZXIub3JkZXIudjEuQ3JlYXRlT3JkZXJSZXF1ZXN0GiUubWFuYWdlci5vcmRlci52MS5DcmVhdGVPcmRlclJlc3BvbnNlElEKCEdldE9yZGVyEiEubWFuYWdlci5vcmRlci52MS5HZXRPcmRlclJlcXVlc3QaIi5tYW5hZ2VyLm9yZGVyLnYxLkdldE9yZGVyUmVzcG9uc2USWgoLQ2FuY2VsT3JkZXISJC5tYW5hZ2VyLm9yZGVyLnYxLkNhbmNlbE9yZGVyUmVxdWVzdBolLm1hbmFnZXIub3JkZXIudjEuQ2FuY2VsT3JkZXJSZXNwb25zZRJXCgpMaXN0T3JkZXJzEiMubWFuYWdlci5vcmRlci52MS5MaXN0T3JkZXJzUmVxdWVzdBokLm1hbmFnZXIub3JkZXIudjEuTGlzdE9yZGVyc1Jlc3BvbnNlQqQCChRjb20ubWFuYWdlci5vcmRlci52MUIKT3JkZXJQcm90b1ABWjpnaXRodWIuY29tL2R2LW5ldC9kdi1wcm90by9nZW4vZ28vbWFuYWdlci9vcmRlci92MTtvcmRlcnYxogIDTU9YqgIQTWFuYWdlci5PcmRlci5WMcoCEE1hbmFnZXJcT3JkZXJcVjHiAhxNYW5hZ2VyXE9yZGVyXFYxXEdQQk1ldGFkYXRh6gISTWFuYWdlcjo6T3JkZXI6OlYxkkFhEh8KGE9yZGVyIE1hbmFnZW1lbnQgU2VydmljZTIDMi4wGhdodHRwczovL2RlbGVnYXRlLmR2Lm5ldCoBAjIQYXBwbGljYXRpb24vanNvbjoQYXBwbGljYXRpb24vanNvbmIGcHJvdG8z", [file_protoc_gen_openapiv2_options_annotations, file_manager_common_v1_common, file_google_protobuf_timestamp, file_google_protobuf_duration]);

/**
 * @generated from message manager.order.v1.OrderReservation
 */
export type OrderReservation = Message<"manager.order.v1.OrderReservation"> & {
  /**
   * @generated from field: int64 reservation_amount = 1;
   */
  reservationAmount: bigint;

  /**
   * @generated from field: manager.common.v1.ResourceType resource_type = 2;
   */
  resourceType: ResourceType;

  /**
   * @generated from field: manager.common.v1.ResourceKind resource_kind = 3;
   */
  resourceKind: ResourceKind;
};

/**
 * Describes the message manager.order.v1.OrderReservation.
 * Use `create(OrderReservationSchema)` to create a new message.
 */
export const OrderReservationSchema: GenMessage<OrderReservation> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 0);

/**
 * @generated from message manager.order.v1.Order
 */
export type Order = Message<"manager.order.v1.Order"> & {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId: string;

  /**
   * @generated from field: manager.common.v1.OrderType order_type = 2;
   */
  orderType: OrderType;

  /**
   * @generated from field: manager.common.v1.OrderStatus order_status = 3;
   */
  orderStatus: OrderStatus;

  /**
   * @generated from field: string executor_address = 4;
   */
  executorAddress: string;

  /**
   * @generated from field: string target_address = 5;
   */
  targetAddress: string;

  /**
   * @generated from field: optional int64 amount = 6;
   */
  amount?: bigint;

  /**
   * @generated from field: optional google.protobuf.Duration duration = 7;
   */
  duration?: Duration;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 8;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: repeated manager.order.v1.OrderReservation reservations = 9;
   */
  reservations: OrderReservation[];
};

/**
 * Describes the message manager.order.v1.Order.
 * Use `create(OrderSchema)` to create a new message.
 */
export const OrderSchema: GenMessage<Order> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 1);

/**
 *
 * BatchCreateOrderRequest submits multiple orders as batch, returning a list of successful orders.
 * Failure of one order in the batch prevents creation of the entire batch.
 * @param orders - list of orders to create.
 *
 * @generated from message manager.order.v1.BatchCreateOrderRequest
 */
export type BatchCreateOrderRequest = Message<"manager.order.v1.BatchCreateOrderRequest"> & {
  /**
   * @generated from field: repeated manager.order.v1.CreateOrderRequest orders = 1;
   */
  orders: CreateOrderRequest[];
};

/**
 * Describes the message manager.order.v1.BatchCreateOrderRequest.
 * Use `create(BatchCreateOrderRequestSchema)` to create a new message.
 */
export const BatchCreateOrderRequestSchema: GenMessage<BatchCreateOrderRequest> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 2);

/**
 *
 * BatchCreateOrderResponse returns a list of successful orders.
 * @param orders - list of orders created.
 *
 * @generated from message manager.order.v1.BatchCreateOrderResponse
 */
export type BatchCreateOrderResponse = Message<"manager.order.v1.BatchCreateOrderResponse"> & {
  /**
   * @generated from field: repeated manager.order.v1.Order orders = 1;
   */
  orders: Order[];
};

/**
 * Describes the message manager.order.v1.BatchCreateOrderResponse.
 * Use `create(BatchCreateOrderResponseSchema)` to create a new message.
 */
export const BatchCreateOrderResponseSchema: GenMessage<BatchCreateOrderResponse> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 3);

/**
 *
 * CreateOrderRequest creates an order.
 * @param order_type - type of order to create.
 * @param resource_type - type of resource for the order.
 * @param duration - duration of the order.
 * @param address - address receiving the resource or where the action is being performed.
 *
 * @generated from message manager.order.v1.CreateOrderRequest
 */
export type CreateOrderRequest = Message<"manager.order.v1.CreateOrderRequest"> & {
  /**
   * @generated from field: manager.common.v1.OrderType order_type = 1;
   */
  orderType: OrderType;

  /**
   * @generated from field: optional int64 amount = 2;
   */
  amount?: bigint;

  /**
   * @generated from field: optional google.protobuf.Duration duration = 3;
   */
  duration?: Duration;

  /**
   * @generated from field: string address = 4;
   */
  address: string;
};

/**
 * Describes the message manager.order.v1.CreateOrderRequest.
 * Use `create(CreateOrderRequestSchema)` to create a new message.
 */
export const CreateOrderRequestSchema: GenMessage<CreateOrderRequest> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 4);

/**
 *
 * CreateOrderResponse represents the response for a created order.
 * @param order - the created order object.
 * @param executor - the executor of the order.
 *
 * @generated from message manager.order.v1.CreateOrderResponse
 */
export type CreateOrderResponse = Message<"manager.order.v1.CreateOrderResponse"> & {
  /**
   * @generated from field: manager.order.v1.Order order = 1;
   */
  order?: Order;
};

/**
 * Describes the message manager.order.v1.CreateOrderResponse.
 * Use `create(CreateOrderResponseSchema)` to create a new message.
 */
export const CreateOrderResponseSchema: GenMessage<CreateOrderResponse> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 5);

/**
 *
 * GetOrderRequest retrieves an order by its ID.
 * @param order_id - UUID of the order to retrieve.
 *
 * @generated from message manager.order.v1.GetOrderRequest
 */
export type GetOrderRequest = Message<"manager.order.v1.GetOrderRequest"> & {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId: string;
};

/**
 * Describes the message manager.order.v1.GetOrderRequest.
 * Use `create(GetOrderRequestSchema)` to create a new message.
 */
export const GetOrderRequestSchema: GenMessage<GetOrderRequest> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 6);

/**
 *
 * GetOrderResponse retrieves an order by its ID.
 * @param order - the order object.
 *
 * @generated from message manager.order.v1.GetOrderResponse
 */
export type GetOrderResponse = Message<"manager.order.v1.GetOrderResponse"> & {
  /**
   * @generated from field: manager.order.v1.Order order = 1;
   */
  order?: Order;
};

/**
 * Describes the message manager.order.v1.GetOrderResponse.
 * Use `create(GetOrderResponseSchema)` to create a new message.
 */
export const GetOrderResponseSchema: GenMessage<GetOrderResponse> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 7);

/**
 *
 * CancelOrderRequest cancels an existing order.
 * @param order_id - string of the order to cancel.
 *
 * @generated from message manager.order.v1.CancelOrderRequest
 */
export type CancelOrderRequest = Message<"manager.order.v1.CancelOrderRequest"> & {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId: string;
};

/**
 * Describes the message manager.order.v1.CancelOrderRequest.
 * Use `create(CancelOrderRequestSchema)` to create a new message.
 */
export const CancelOrderRequestSchema: GenMessage<CancelOrderRequest> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 8);

/**
 *
 * CancelOrderResponse cancels an existing order.
 * @param order - mutated order object.
 *
 * @generated from message manager.order.v1.CancelOrderResponse
 */
export type CancelOrderResponse = Message<"manager.order.v1.CancelOrderResponse"> & {
  /**
   * @generated from field: manager.order.v1.Order order = 1;
   */
  order?: Order;
};

/**
 * Describes the message manager.order.v1.CancelOrderResponse.
 * Use `create(CancelOrderResponseSchema)` to create a new message.
 */
export const CancelOrderResponseSchema: GenMessage<CancelOrderResponse> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 9);

/**
 *
 * ListOrdersRequest retrieves a list of orders based on the specified criteria.
 * @param order_type - type of order to filter by.
 * @param status - status of the order to filter by.
 * @param executor_address - address of the executor to filter by.
 * @param target_address - address of the target to filter by.
 * @param page - page number to return (1-based indexing).
 * @param page_size - number of orders to return per page.
 *
 * @generated from message manager.order.v1.ListOrdersRequest
 */
export type ListOrdersRequest = Message<"manager.order.v1.ListOrdersRequest"> & {
  /**
   * @generated from field: optional manager.common.v1.OrderType order_type = 1;
   */
  orderType?: OrderType;

  /**
   * @generated from field: optional manager.common.v1.OrderStatus status = 2;
   */
  status?: OrderStatus;

  /**
   * @generated from field: optional string executor_address = 3;
   */
  executorAddress?: string;

  /**
   * @generated from field: optional string target_address = 4;
   */
  targetAddress?: string;

  /**
   * @generated from field: optional int32 page = 5;
   */
  page?: number;

  /**
   * @generated from field: optional int32 page_size = 6;
   */
  pageSize?: number;

  /**
   * @generated from field: repeated string order_id = 7;
   */
  orderId: string[];
};

/**
 * Describes the message manager.order.v1.ListOrdersRequest.
 * Use `create(ListOrdersRequestSchema)` to create a new message.
 */
export const ListOrdersRequestSchema: GenMessage<ListOrdersRequest> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 10);

/**
 *
 * ListOrdersResponse retrieves a list of orders based on the specified criteria.
 * @param orders - list of orders matching the criteria.
 * @param total_count - total number of orders matching the criteria.
 * @param page - current page number.
 * @param page_size - number of orders per page.
 * @param last_page - last page number based on total count and page size.
 *
 * @generated from message manager.order.v1.ListOrdersResponse
 */
export type ListOrdersResponse = Message<"manager.order.v1.ListOrdersResponse"> & {
  /**
   * @generated from field: repeated manager.order.v1.Order orders = 1;
   */
  orders: Order[];

  /**
   * @generated from field: manager.common.v1.Pagination pagination = 2;
   */
  pagination?: Pagination;
};

/**
 * Describes the message manager.order.v1.ListOrdersResponse.
 * Use `create(ListOrdersResponseSchema)` to create a new message.
 */
export const ListOrdersResponseSchema: GenMessage<ListOrdersResponse> = /*@__PURE__*/
  messageDesc(file_manager_order_v1_order, 11);

/**
 * The OrderService is responsible for managing orders in the system.
 *
 * @generated from service manager.order.v1.OrderService
 */
export const OrderService: GenService<{
  /**
   * Creates multiple orders with the specified order types.
   *
   * @generated from rpc manager.order.v1.OrderService.BatchCreateOrder
   */
  batchCreateOrder: {
    methodKind: "unary";
    input: typeof BatchCreateOrderRequestSchema;
    output: typeof BatchCreateOrderResponseSchema;
  },
  /**
   * CreateOrder creates a new order with the specified order type.
   *
   * @generated from rpc manager.order.v1.OrderService.CreateOrder
   */
  createOrder: {
    methodKind: "unary";
    input: typeof CreateOrderRequestSchema;
    output: typeof CreateOrderResponseSchema;
  },
  /**
   * GetOrder retrieves an order by its ID.
   *
   * @generated from rpc manager.order.v1.OrderService.GetOrder
   */
  getOrder: {
    methodKind: "unary";
    input: typeof GetOrderRequestSchema;
    output: typeof GetOrderResponseSchema;
  },
  /**
   * CancelOrder cancels an existing order.
   *
   * @generated from rpc manager.order.v1.OrderService.CancelOrder
   */
  cancelOrder: {
    methodKind: "unary";
    input: typeof CancelOrderRequestSchema;
    output: typeof CancelOrderResponseSchema;
  },
  /**
   * ListOrders retrieves a list of orders based on the specified criteria.
   *
   * @generated from rpc manager.order.v1.OrderService.ListOrders
   */
  listOrders: {
    methodKind: "unary";
    input: typeof ListOrdersRequestSchema;
    output: typeof ListOrdersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_manager_order_v1_order, 0);

