// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: eproxy/transactions/v2/monero.proto

package transactionsv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MoneroAdditionalDataFull struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AsHex           string                 `protobuf:"bytes,1,opt,name=as_hex,json=asHex,proto3" json:"as_hex,omitempty"`
	BlockTimestamp  int64                  `protobuf:"varint,3,opt,name=block_timestamp,json=blockTimestamp,proto3" json:"block_timestamp,omitempty"`
	DoubleSpendSeen bool                   `protobuf:"varint,5,opt,name=double_spend_seen,json=doubleSpendSeen,proto3" json:"double_spend_seen,omitempty"`
	OutputIndices   []int64                `protobuf:"varint,7,rep,packed,name=output_indices,json=outputIndices,proto3" json:"output_indices,omitempty"`
	PrunableAsHex   string                 `protobuf:"bytes,8,opt,name=prunable_as_hex,json=prunableAsHex,proto3" json:"prunable_as_hex,omitempty"`
	PrunableHash    string                 `protobuf:"bytes,9,opt,name=prunable_hash,json=prunableHash,proto3" json:"prunable_hash,omitempty"`
	PrunedAsHex     string                 `protobuf:"bytes,10,opt,name=pruned_as_hex,json=prunedAsHex,proto3" json:"pruned_as_hex,omitempty"`
	Data            *XmrMetadata           `protobuf:"bytes,12,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MoneroAdditionalDataFull) Reset() {
	*x = MoneroAdditionalDataFull{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoneroAdditionalDataFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneroAdditionalDataFull) ProtoMessage() {}

func (x *MoneroAdditionalDataFull) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneroAdditionalDataFull.ProtoReflect.Descriptor instead.
func (*MoneroAdditionalDataFull) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{0}
}

func (x *MoneroAdditionalDataFull) GetAsHex() string {
	if x != nil {
		return x.AsHex
	}
	return ""
}

func (x *MoneroAdditionalDataFull) GetBlockTimestamp() int64 {
	if x != nil {
		return x.BlockTimestamp
	}
	return 0
}

func (x *MoneroAdditionalDataFull) GetDoubleSpendSeen() bool {
	if x != nil {
		return x.DoubleSpendSeen
	}
	return false
}

func (x *MoneroAdditionalDataFull) GetOutputIndices() []int64 {
	if x != nil {
		return x.OutputIndices
	}
	return nil
}

func (x *MoneroAdditionalDataFull) GetPrunableAsHex() string {
	if x != nil {
		return x.PrunableAsHex
	}
	return ""
}

func (x *MoneroAdditionalDataFull) GetPrunableHash() string {
	if x != nil {
		return x.PrunableHash
	}
	return ""
}

func (x *MoneroAdditionalDataFull) GetPrunedAsHex() string {
	if x != nil {
		return x.PrunedAsHex
	}
	return ""
}

func (x *MoneroAdditionalDataFull) GetData() *XmrMetadata {
	if x != nil {
		return x.Data
	}
	return nil
}

type RctSignatures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int64                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	TxnFee        uint64                 `protobuf:"varint,2,opt,name=txn_fee,json=txnFee,proto3" json:"txn_fee,omitempty"`
	EcdhInfo      []*EcdhInfo            `protobuf:"bytes,3,rep,name=ecdh_info,json=ecdhInfo,proto3" json:"ecdh_info,omitempty"`
	OutPk         []string               `protobuf:"bytes,4,rep,name=out_pk,json=outPk,proto3" json:"out_pk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RctSignatures) Reset() {
	*x = RctSignatures{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RctSignatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RctSignatures) ProtoMessage() {}

func (x *RctSignatures) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RctSignatures.ProtoReflect.Descriptor instead.
func (*RctSignatures) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{1}
}

func (x *RctSignatures) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RctSignatures) GetTxnFee() uint64 {
	if x != nil {
		return x.TxnFee
	}
	return 0
}

func (x *RctSignatures) GetEcdhInfo() []*EcdhInfo {
	if x != nil {
		return x.EcdhInfo
	}
	return nil
}

func (x *RctSignatures) GetOutPk() []string {
	if x != nil {
		return x.OutPk
	}
	return nil
}

type EcdhInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        string                 `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EcdhInfo) Reset() {
	*x = EcdhInfo{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EcdhInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcdhInfo) ProtoMessage() {}

func (x *EcdhInfo) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcdhInfo.ProtoReflect.Descriptor instead.
func (*EcdhInfo) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{2}
}

func (x *EcdhInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Prunable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nbp           int64                  `protobuf:"varint,1,opt,name=nbp,proto3" json:"nbp,omitempty"`
	Bpp           []*Bpp                 `protobuf:"bytes,2,rep,name=bpp,proto3" json:"bpp,omitempty"`
	Clsags        []*CLSAGs              `protobuf:"bytes,3,rep,name=clsags,proto3" json:"clsags,omitempty"`
	PseudoOuts    []string               `protobuf:"bytes,4,rep,name=pseudo_outs,json=pseudoOuts,proto3" json:"pseudo_outs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Prunable) Reset() {
	*x = Prunable{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prunable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prunable) ProtoMessage() {}

func (x *Prunable) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prunable.ProtoReflect.Descriptor instead.
func (*Prunable) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{3}
}

func (x *Prunable) GetNbp() int64 {
	if x != nil {
		return x.Nbp
	}
	return 0
}

func (x *Prunable) GetBpp() []*Bpp {
	if x != nil {
		return x.Bpp
	}
	return nil
}

func (x *Prunable) GetClsags() []*CLSAGs {
	if x != nil {
		return x.Clsags
	}
	return nil
}

func (x *Prunable) GetPseudoOuts() []string {
	if x != nil {
		return x.PseudoOuts
	}
	return nil
}

type Bpp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             string                 `protobuf:"bytes,1,opt,name=a,proto3" json:"a,omitempty"`
	A1            string                 `protobuf:"bytes,2,opt,name=a1,proto3" json:"a1,omitempty"`
	B             string                 `protobuf:"bytes,3,opt,name=b,proto3" json:"b,omitempty"`
	R1            string                 `protobuf:"bytes,4,opt,name=r1,proto3" json:"r1,omitempty"`
	S1            string                 `protobuf:"bytes,5,opt,name=s1,proto3" json:"s1,omitempty"`
	D1            string                 `protobuf:"bytes,6,opt,name=d1,proto3" json:"d1,omitempty"`
	L             []string               `protobuf:"bytes,7,rep,name=l,proto3" json:"l,omitempty"`
	R             []string               `protobuf:"bytes,8,rep,name=r,proto3" json:"r,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bpp) Reset() {
	*x = Bpp{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bpp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bpp) ProtoMessage() {}

func (x *Bpp) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bpp.ProtoReflect.Descriptor instead.
func (*Bpp) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{4}
}

func (x *Bpp) GetA() string {
	if x != nil {
		return x.A
	}
	return ""
}

func (x *Bpp) GetA1() string {
	if x != nil {
		return x.A1
	}
	return ""
}

func (x *Bpp) GetB() string {
	if x != nil {
		return x.B
	}
	return ""
}

func (x *Bpp) GetR1() string {
	if x != nil {
		return x.R1
	}
	return ""
}

func (x *Bpp) GetS1() string {
	if x != nil {
		return x.S1
	}
	return ""
}

func (x *Bpp) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *Bpp) GetL() []string {
	if x != nil {
		return x.L
	}
	return nil
}

func (x *Bpp) GetR() []string {
	if x != nil {
		return x.R
	}
	return nil
}

type CLSAGs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	S             []string               `protobuf:"bytes,1,rep,name=s,proto3" json:"s,omitempty"`
	C1            string                 `protobuf:"bytes,2,opt,name=c1,proto3" json:"c1,omitempty"`
	D             string                 `protobuf:"bytes,3,opt,name=d,proto3" json:"d,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLSAGs) Reset() {
	*x = CLSAGs{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLSAGs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLSAGs) ProtoMessage() {}

func (x *CLSAGs) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLSAGs.ProtoReflect.Descriptor instead.
func (*CLSAGs) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{5}
}

func (x *CLSAGs) GetS() []string {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *CLSAGs) GetC1() string {
	if x != nil {
		return x.C1
	}
	return ""
}

func (x *CLSAGs) GetD() string {
	if x != nil {
		return x.D
	}
	return ""
}

type Key struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int64                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	KeyOffsets    []int64                `protobuf:"varint,2,rep,packed,name=key_offsets,json=keyOffsets,proto3" json:"key_offsets,omitempty"`
	KImage        string                 `protobuf:"bytes,3,opt,name=k_image,json=kImage,proto3" json:"k_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Key) Reset() {
	*x = Key{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{6}
}

func (x *Key) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Key) GetKeyOffsets() []int64 {
	if x != nil {
		return x.KeyOffsets
	}
	return nil
}

func (x *Key) GetKImage() string {
	if x != nil {
		return x.KImage
	}
	return ""
}

type TargetKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ViewTag       string                 `protobuf:"bytes,2,opt,name=view_tag,json=viewTag,proto3" json:"view_tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetKey) Reset() {
	*x = TargetKey{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetKey) ProtoMessage() {}

func (x *TargetKey) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetKey.ProtoReflect.Descriptor instead.
func (*TargetKey) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{7}
}

func (x *TargetKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TargetKey) GetViewTag() string {
	if x != nil {
		return x.ViewTag
	}
	return ""
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaggedKey     *TargetKey             `protobuf:"bytes,1,opt,name=tagged_key,json=taggedKey,proto3" json:"tagged_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{8}
}

func (x *Target) GetTaggedKey() *TargetKey {
	if x != nil {
		return x.TaggedKey
	}
	return nil
}

type Vout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        int64                  `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Target        *Target                `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vout) Reset() {
	*x = Vout{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vout) ProtoMessage() {}

func (x *Vout) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vout.ProtoReflect.Descriptor instead.
func (*Vout) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{9}
}

func (x *Vout) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Vout) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type Vin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gen           *Coinbase              `protobuf:"bytes,1,opt,name=gen,proto3,oneof" json:"gen,omitempty"`
	Key           *Key                   `protobuf:"bytes,2,opt,name=key,proto3,oneof" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vin) Reset() {
	*x = Vin{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vin) ProtoMessage() {}

func (x *Vin) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vin.ProtoReflect.Descriptor instead.
func (*Vin) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{10}
}

func (x *Vin) GetGen() *Coinbase {
	if x != nil {
		return x.Gen
	}
	return nil
}

func (x *Vin) GetKey() *Key {
	if x != nil {
		return x.Key
	}
	return nil
}

type Coinbase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        int64                  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coinbase) Reset() {
	*x = Coinbase{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coinbase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coinbase) ProtoMessage() {}

func (x *Coinbase) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coinbase.ProtoReflect.Descriptor instead.
func (*Coinbase) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{11}
}

func (x *Coinbase) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type XmrMetadata struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Version        int64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	UnlockTime     int64                  `protobuf:"varint,2,opt,name=unlock_time,json=unlockTime,proto3" json:"unlock_time,omitempty"`
	Vin            []*Vin                 `protobuf:"bytes,3,rep,name=vin,proto3" json:"vin,omitempty"`
	Vout           []*Vout                `protobuf:"bytes,4,rep,name=vout,proto3" json:"vout,omitempty"`
	Extra          []int64                `protobuf:"varint,5,rep,packed,name=extra,proto3" json:"extra,omitempty"`
	RctSignatures  *RctSignatures         `protobuf:"bytes,6,opt,name=rct_signatures,json=rctSignatures,proto3" json:"rct_signatures,omitempty"`
	RctsigPrunable *Prunable              `protobuf:"bytes,7,opt,name=rctsig_prunable,json=rctsigPrunable,proto3" json:"rctsig_prunable,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *XmrMetadata) Reset() {
	*x = XmrMetadata{}
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XmrMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XmrMetadata) ProtoMessage() {}

func (x *XmrMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_monero_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XmrMetadata.ProtoReflect.Descriptor instead.
func (*XmrMetadata) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_monero_proto_rawDescGZIP(), []int{12}
}

func (x *XmrMetadata) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *XmrMetadata) GetUnlockTime() int64 {
	if x != nil {
		return x.UnlockTime
	}
	return 0
}

func (x *XmrMetadata) GetVin() []*Vin {
	if x != nil {
		return x.Vin
	}
	return nil
}

func (x *XmrMetadata) GetVout() []*Vout {
	if x != nil {
		return x.Vout
	}
	return nil
}

func (x *XmrMetadata) GetExtra() []int64 {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *XmrMetadata) GetRctSignatures() *RctSignatures {
	if x != nil {
		return x.RctSignatures
	}
	return nil
}

func (x *XmrMetadata) GetRctsigPrunable() *Prunable {
	if x != nil {
		return x.RctsigPrunable
	}
	return nil
}

var File_eproxy_transactions_v2_monero_proto protoreflect.FileDescriptor

const file_eproxy_transactions_v2_monero_proto_rawDesc = "" +
	"\n" +
	"#eproxy/transactions/v2/monero.proto\x12\x16eproxy.transactions.v2\"\xd7\x02\n" +
	"\x18MoneroAdditionalDataFull\x12\x15\n" +
	"\x06as_hex\x18\x01 \x01(\tR\x05asHex\x12'\n" +
	"\x0fblock_timestamp\x18\x03 \x01(\x03R\x0eblockTimestamp\x12*\n" +
	"\x11double_spend_seen\x18\x05 \x01(\bR\x0fdoubleSpendSeen\x12%\n" +
	"\x0eoutput_indices\x18\a \x03(\x03R\routputIndices\x12&\n" +
	"\x0fprunable_as_hex\x18\b \x01(\tR\rprunableAsHex\x12#\n" +
	"\rprunable_hash\x18\t \x01(\tR\fprunableHash\x12\"\n" +
	"\rpruned_as_hex\x18\n" +
	" \x01(\tR\vprunedAsHex\x127\n" +
	"\x04data\x18\f \x01(\v2#.eproxy.transactions.v2.XmrMetadataR\x04data\"\x92\x01\n" +
	"\rRctSignatures\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x03R\x04type\x12\x17\n" +
	"\atxn_fee\x18\x02 \x01(\x04R\x06txnFee\x12=\n" +
	"\tecdh_info\x18\x03 \x03(\v2 .eproxy.transactions.v2.EcdhInfoR\becdhInfo\x12\x15\n" +
	"\x06out_pk\x18\x04 \x03(\tR\x05outPk\"\"\n" +
	"\bEcdhInfo\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\tR\x06amount\"\xa4\x01\n" +
	"\bPrunable\x12\x10\n" +
	"\x03nbp\x18\x01 \x01(\x03R\x03nbp\x12-\n" +
	"\x03bpp\x18\x02 \x03(\v2\x1b.eproxy.transactions.v2.BppR\x03bpp\x126\n" +
	"\x06clsags\x18\x03 \x03(\v2\x1e.eproxy.transactions.v2.CLSAGsR\x06clsags\x12\x1f\n" +
	"\vpseudo_outs\x18\x04 \x03(\tR\n" +
	"pseudoOuts\"}\n" +
	"\x03Bpp\x12\f\n" +
	"\x01a\x18\x01 \x01(\tR\x01a\x12\x0e\n" +
	"\x02a1\x18\x02 \x01(\tR\x02a1\x12\f\n" +
	"\x01b\x18\x03 \x01(\tR\x01b\x12\x0e\n" +
	"\x02r1\x18\x04 \x01(\tR\x02r1\x12\x0e\n" +
	"\x02s1\x18\x05 \x01(\tR\x02s1\x12\x0e\n" +
	"\x02d1\x18\x06 \x01(\tR\x02d1\x12\f\n" +
	"\x01l\x18\a \x03(\tR\x01l\x12\f\n" +
	"\x01r\x18\b \x03(\tR\x01r\"4\n" +
	"\x06CLSAGs\x12\f\n" +
	"\x01s\x18\x01 \x03(\tR\x01s\x12\x0e\n" +
	"\x02c1\x18\x02 \x01(\tR\x02c1\x12\f\n" +
	"\x01d\x18\x03 \x01(\tR\x01d\"W\n" +
	"\x03Key\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x03R\x06amount\x12\x1f\n" +
	"\vkey_offsets\x18\x02 \x03(\x03R\n" +
	"keyOffsets\x12\x17\n" +
	"\ak_image\x18\x03 \x01(\tR\x06kImage\"8\n" +
	"\tTargetKey\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x19\n" +
	"\bview_tag\x18\x02 \x01(\tR\aviewTag\"J\n" +
	"\x06Target\x12@\n" +
	"\n" +
	"tagged_key\x18\x01 \x01(\v2!.eproxy.transactions.v2.TargetKeyR\ttaggedKey\"V\n" +
	"\x04Vout\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x03R\x06amount\x126\n" +
	"\x06target\x18\x02 \x01(\v2\x1e.eproxy.transactions.v2.TargetR\x06target\"\x82\x01\n" +
	"\x03Vin\x127\n" +
	"\x03gen\x18\x01 \x01(\v2 .eproxy.transactions.v2.CoinbaseH\x00R\x03gen\x88\x01\x01\x122\n" +
	"\x03key\x18\x02 \x01(\v2\x1b.eproxy.transactions.v2.KeyH\x01R\x03key\x88\x01\x01B\x06\n" +
	"\x04_genB\x06\n" +
	"\x04_key\"\"\n" +
	"\bCoinbase\x12\x16\n" +
	"\x06height\x18\x01 \x01(\x03R\x06height\"\xd8\x02\n" +
	"\vXmrMetadata\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\x12\x1f\n" +
	"\vunlock_time\x18\x02 \x01(\x03R\n" +
	"unlockTime\x12-\n" +
	"\x03vin\x18\x03 \x03(\v2\x1b.eproxy.transactions.v2.VinR\x03vin\x120\n" +
	"\x04vout\x18\x04 \x03(\v2\x1c.eproxy.transactions.v2.VoutR\x04vout\x12\x14\n" +
	"\x05extra\x18\x05 \x03(\x03R\x05extra\x12L\n" +
	"\x0erct_signatures\x18\x06 \x01(\v2%.eproxy.transactions.v2.RctSignaturesR\rrctSignatures\x12I\n" +
	"\x0frctsig_prunable\x18\a \x01(\v2 .eproxy.transactions.v2.PrunableR\x0erctsigPrunableB\xec\x01\n" +
	"\x1acom.eproxy.transactions.v2B\vMoneroProtoP\x01ZGgithub.com/dv-net/dv-proto/gen/go/eproxy/transactions/v2;transactionsv2\xa2\x02\x03ETX\xaa\x02\x16Eproxy.Transactions.V2\xca\x02\x16Eproxy\\Transactions\\V2\xe2\x02\"Eproxy\\Transactions\\V2\\GPBMetadata\xea\x02\x18Eproxy::Transactions::V2b\x06proto3"

var (
	file_eproxy_transactions_v2_monero_proto_rawDescOnce sync.Once
	file_eproxy_transactions_v2_monero_proto_rawDescData []byte
)

func file_eproxy_transactions_v2_monero_proto_rawDescGZIP() []byte {
	file_eproxy_transactions_v2_monero_proto_rawDescOnce.Do(func() {
		file_eproxy_transactions_v2_monero_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eproxy_transactions_v2_monero_proto_rawDesc), len(file_eproxy_transactions_v2_monero_proto_rawDesc)))
	})
	return file_eproxy_transactions_v2_monero_proto_rawDescData
}

var file_eproxy_transactions_v2_monero_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_eproxy_transactions_v2_monero_proto_goTypes = []any{
	(*MoneroAdditionalDataFull)(nil), // 0: eproxy.transactions.v2.MoneroAdditionalDataFull
	(*RctSignatures)(nil),            // 1: eproxy.transactions.v2.RctSignatures
	(*EcdhInfo)(nil),                 // 2: eproxy.transactions.v2.EcdhInfo
	(*Prunable)(nil),                 // 3: eproxy.transactions.v2.Prunable
	(*Bpp)(nil),                      // 4: eproxy.transactions.v2.Bpp
	(*CLSAGs)(nil),                   // 5: eproxy.transactions.v2.CLSAGs
	(*Key)(nil),                      // 6: eproxy.transactions.v2.Key
	(*TargetKey)(nil),                // 7: eproxy.transactions.v2.TargetKey
	(*Target)(nil),                   // 8: eproxy.transactions.v2.Target
	(*Vout)(nil),                     // 9: eproxy.transactions.v2.Vout
	(*Vin)(nil),                      // 10: eproxy.transactions.v2.Vin
	(*Coinbase)(nil),                 // 11: eproxy.transactions.v2.Coinbase
	(*XmrMetadata)(nil),              // 12: eproxy.transactions.v2.XmrMetadata
}
var file_eproxy_transactions_v2_monero_proto_depIdxs = []int32{
	12, // 0: eproxy.transactions.v2.MoneroAdditionalDataFull.data:type_name -> eproxy.transactions.v2.XmrMetadata
	2,  // 1: eproxy.transactions.v2.RctSignatures.ecdh_info:type_name -> eproxy.transactions.v2.EcdhInfo
	4,  // 2: eproxy.transactions.v2.Prunable.bpp:type_name -> eproxy.transactions.v2.Bpp
	5,  // 3: eproxy.transactions.v2.Prunable.clsags:type_name -> eproxy.transactions.v2.CLSAGs
	7,  // 4: eproxy.transactions.v2.Target.tagged_key:type_name -> eproxy.transactions.v2.TargetKey
	8,  // 5: eproxy.transactions.v2.Vout.target:type_name -> eproxy.transactions.v2.Target
	11, // 6: eproxy.transactions.v2.Vin.gen:type_name -> eproxy.transactions.v2.Coinbase
	6,  // 7: eproxy.transactions.v2.Vin.key:type_name -> eproxy.transactions.v2.Key
	10, // 8: eproxy.transactions.v2.XmrMetadata.vin:type_name -> eproxy.transactions.v2.Vin
	9,  // 9: eproxy.transactions.v2.XmrMetadata.vout:type_name -> eproxy.transactions.v2.Vout
	1,  // 10: eproxy.transactions.v2.XmrMetadata.rct_signatures:type_name -> eproxy.transactions.v2.RctSignatures
	3,  // 11: eproxy.transactions.v2.XmrMetadata.rctsig_prunable:type_name -> eproxy.transactions.v2.Prunable
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_eproxy_transactions_v2_monero_proto_init() }
func file_eproxy_transactions_v2_monero_proto_init() {
	if File_eproxy_transactions_v2_monero_proto != nil {
		return
	}
	file_eproxy_transactions_v2_monero_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eproxy_transactions_v2_monero_proto_rawDesc), len(file_eproxy_transactions_v2_monero_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eproxy_transactions_v2_monero_proto_goTypes,
		DependencyIndexes: file_eproxy_transactions_v2_monero_proto_depIdxs,
		MessageInfos:      file_eproxy_transactions_v2_monero_proto_msgTypes,
	}.Build()
	File_eproxy_transactions_v2_monero_proto = out.File
	file_eproxy_transactions_v2_monero_proto_goTypes = nil
	file_eproxy_transactions_v2_monero_proto_depIdxs = nil
}
