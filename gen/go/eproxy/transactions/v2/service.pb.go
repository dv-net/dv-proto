// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: eproxy/transactions/v2/service.proto

package transactionsv2

import (
	v2 "github.com/dv-net/dv-proto/gen/go/eproxy/common/v2"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blockchain    v2.Blockchain          `protobuf:"varint,1,opt,name=blockchain,proto3,enum=eproxy.common.v2.Blockchain" json:"blockchain,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoRequest) Reset() {
	*x = GetInfoRequest{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoRequest) ProtoMessage() {}

func (x *GetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetInfoRequest) GetBlockchain() v2.Blockchain {
	if x != nil {
		return x.Blockchain
	}
	return v2.Blockchain(0)
}

func (x *GetInfoRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transaction   *Transaction           `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetInfoResponse) Reset() {
	*x = GetInfoResponse{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfoResponse) ProtoMessage() {}

func (x *GetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfoResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

// Find request
type FindRequest struct {
	state                   protoimpl.MessageState         `protogen:"open.v1"`
	Blockchain              v2.Blockchain                  `protobuf:"varint,1,opt,name=blockchain,proto3,enum=eproxy.common.v2.Blockchain" json:"blockchain,omitempty"`
	Common                  *v2.FindRequestCommon          `protobuf:"bytes,2,opt,name=common,proto3" json:"common,omitempty"`
	Search                  *string                        `protobuf:"bytes,3,opt,name=search,proto3,oneof" json:"search,omitempty"`
	Hash                    *string                        `protobuf:"bytes,4,opt,name=hash,proto3,oneof" json:"hash,omitempty"`
	BlockHeight             *uint64                        `protobuf:"varint,5,opt,name=block_height,json=blockHeight,proto3,oneof" json:"block_height,omitempty"`
	BlockHeightOffset       *uint64                        `protobuf:"varint,6,opt,name=block_height_offset,json=blockHeightOffset,proto3,oneof" json:"block_height_offset,omitempty"`
	Address                 *string                        `protobuf:"bytes,7,opt,name=address,proto3,oneof" json:"address,omitempty"`
	ContractAddress         *string                        `protobuf:"bytes,8,opt,name=contract_address,json=contractAddress,proto3,oneof" json:"contract_address,omitempty"`
	ContractType            *uint32                        `protobuf:"varint,9,opt,name=contract_type,json=contractType,proto3,oneof" json:"contract_type,omitempty"`
	IsIncludeAdditionalData bool                           `protobuf:"varint,10,opt,name=is_include_additional_data,json=isIncludeAdditionalData,proto3" json:"is_include_additional_data,omitempty"`
	TronParams              *FindRequest_TronParams        `protobuf:"bytes,11,opt,name=tron_params,json=tronParams,proto3,oneof" json:"tron_params,omitempty"`
	EvmParams               *FindRequest_EVMParams         `protobuf:"bytes,12,opt,name=evm_params,json=evmParams,proto3,oneof" json:"evm_params,omitempty"`
	BitcoinLikeParams       *FindRequest_BitcoinLikeParams `protobuf:"bytes,13,opt,name=bitcoin_like_params,json=bitcoinLikeParams,proto3,oneof" json:"bitcoin_like_params,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *FindRequest) Reset() {
	*x = FindRequest{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest) ProtoMessage() {}

func (x *FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest.ProtoReflect.Descriptor instead.
func (*FindRequest) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{2}
}

func (x *FindRequest) GetBlockchain() v2.Blockchain {
	if x != nil {
		return x.Blockchain
	}
	return v2.Blockchain(0)
}

func (x *FindRequest) GetCommon() *v2.FindRequestCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *FindRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *FindRequest) GetHash() string {
	if x != nil && x.Hash != nil {
		return *x.Hash
	}
	return ""
}

func (x *FindRequest) GetBlockHeight() uint64 {
	if x != nil && x.BlockHeight != nil {
		return *x.BlockHeight
	}
	return 0
}

func (x *FindRequest) GetBlockHeightOffset() uint64 {
	if x != nil && x.BlockHeightOffset != nil {
		return *x.BlockHeightOffset
	}
	return 0
}

func (x *FindRequest) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *FindRequest) GetContractAddress() string {
	if x != nil && x.ContractAddress != nil {
		return *x.ContractAddress
	}
	return ""
}

func (x *FindRequest) GetContractType() uint32 {
	if x != nil && x.ContractType != nil {
		return *x.ContractType
	}
	return 0
}

func (x *FindRequest) GetIsIncludeAdditionalData() bool {
	if x != nil {
		return x.IsIncludeAdditionalData
	}
	return false
}

func (x *FindRequest) GetTronParams() *FindRequest_TronParams {
	if x != nil {
		return x.TronParams
	}
	return nil
}

func (x *FindRequest) GetEvmParams() *FindRequest_EVMParams {
	if x != nil {
		return x.EvmParams
	}
	return nil
}

func (x *FindRequest) GetBitcoinLikeParams() *FindRequest_BitcoinLikeParams {
	if x != nil {
		return x.BitcoinLikeParams
	}
	return nil
}

type FindResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Items          []*Transaction         `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPageExists bool                   `protobuf:"varint,2,opt,name=next_page_exists,json=nextPageExists,proto3" json:"next_page_exists,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FindResponse) Reset() {
	*x = FindResponse{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResponse) ProtoMessage() {}

func (x *FindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResponse.ProtoReflect.Descriptor instead.
func (*FindResponse) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{3}
}

func (x *FindResponse) GetItems() []*Transaction {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *FindResponse) GetNextPageExists() bool {
	if x != nil {
		return x.NextPageExists
	}
	return false
}

type SuggestTxFeeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blockchain    v2.Blockchain          `protobuf:"varint,1,opt,name=blockchain,proto3,enum=eproxy.common.v2.Blockchain" json:"blockchain,omitempty"`
	Identifier    string                 `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestTxFeeRequest) Reset() {
	*x = SuggestTxFeeRequest{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestTxFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestTxFeeRequest) ProtoMessage() {}

func (x *SuggestTxFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestTxFeeRequest.ProtoReflect.Descriptor instead.
func (*SuggestTxFeeRequest) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{4}
}

func (x *SuggestTxFeeRequest) GetBlockchain() v2.Blockchain {
	if x != nil {
		return x.Blockchain
	}
	return v2.Blockchain(0)
}

func (x *SuggestTxFeeRequest) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

type SuggestTxFeeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Fee   string                 `protobuf:"bytes,1,opt,name=fee,proto3" json:"fee,omitempty"`
	// Additional blockchain-specific data
	//
	// Types that are valid to be assigned to AdditionalData:
	//
	//	*SuggestTxFeeResponse_TronData
	//	*SuggestTxFeeResponse_EvmData
	//	*SuggestTxFeeResponse_BitcoinLikeData
	AdditionalData isSuggestTxFeeResponse_AdditionalData `protobuf_oneof:"additional_data"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SuggestTxFeeResponse) Reset() {
	*x = SuggestTxFeeResponse{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestTxFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestTxFeeResponse) ProtoMessage() {}

func (x *SuggestTxFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestTxFeeResponse.ProtoReflect.Descriptor instead.
func (*SuggestTxFeeResponse) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{5}
}

func (x *SuggestTxFeeResponse) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *SuggestTxFeeResponse) GetAdditionalData() isSuggestTxFeeResponse_AdditionalData {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

func (x *SuggestTxFeeResponse) GetTronData() *SuggestTxFeeResponse_TronFeeData {
	if x != nil {
		if x, ok := x.AdditionalData.(*SuggestTxFeeResponse_TronData); ok {
			return x.TronData
		}
	}
	return nil
}

func (x *SuggestTxFeeResponse) GetEvmData() *SuggestTxFeeResponse_EVMFeeData {
	if x != nil {
		if x, ok := x.AdditionalData.(*SuggestTxFeeResponse_EvmData); ok {
			return x.EvmData
		}
	}
	return nil
}

func (x *SuggestTxFeeResponse) GetBitcoinLikeData() *SuggestTxFeeResponse_BitcoinLikeFeeData {
	if x != nil {
		if x, ok := x.AdditionalData.(*SuggestTxFeeResponse_BitcoinLikeData); ok {
			return x.BitcoinLikeData
		}
	}
	return nil
}

type isSuggestTxFeeResponse_AdditionalData interface {
	isSuggestTxFeeResponse_AdditionalData()
}

type SuggestTxFeeResponse_TronData struct {
	TronData *SuggestTxFeeResponse_TronFeeData `protobuf:"bytes,2,opt,name=tron_data,json=tronData,proto3,oneof"`
}

type SuggestTxFeeResponse_EvmData struct {
	EvmData *SuggestTxFeeResponse_EVMFeeData `protobuf:"bytes,3,opt,name=evm_data,json=evmData,proto3,oneof"`
}

type SuggestTxFeeResponse_BitcoinLikeData struct {
	BitcoinLikeData *SuggestTxFeeResponse_BitcoinLikeFeeData `protobuf:"bytes,4,opt,name=bitcoin_like_data,json=bitcoinLikeData,proto3,oneof"`
}

func (*SuggestTxFeeResponse_TronData) isSuggestTxFeeResponse_AdditionalData() {}

func (*SuggestTxFeeResponse_EvmData) isSuggestTxFeeResponse_AdditionalData() {}

func (*SuggestTxFeeResponse_BitcoinLikeData) isSuggestTxFeeResponse_AdditionalData() {}

type FindRequest_TronParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRequest_TronParams) Reset() {
	*x = FindRequest_TronParams{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRequest_TronParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest_TronParams) ProtoMessage() {}

func (x *FindRequest_TronParams) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest_TronParams.ProtoReflect.Descriptor instead.
func (*FindRequest_TronParams) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{2, 0}
}

type FindRequest_EVMParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindRequest_EVMParams) Reset() {
	*x = FindRequest_EVMParams{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRequest_EVMParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest_EVMParams) ProtoMessage() {}

func (x *FindRequest_EVMParams) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest_EVMParams.ProtoReflect.Descriptor instead.
func (*FindRequest_EVMParams) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{2, 1}
}

type FindRequest_BitcoinLikeParams struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FilterByAddress *bool                  `protobuf:"varint,1,opt,name=filter_by_address,json=filterByAddress,proto3,oneof" json:"filter_by_address,omitempty"`
	FilterByMempool *bool                  `protobuf:"varint,2,opt,name=filter_by_mempool,json=filterByMempool,proto3,oneof" json:"filter_by_mempool,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FindRequest_BitcoinLikeParams) Reset() {
	*x = FindRequest_BitcoinLikeParams{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindRequest_BitcoinLikeParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest_BitcoinLikeParams) ProtoMessage() {}

func (x *FindRequest_BitcoinLikeParams) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest_BitcoinLikeParams.ProtoReflect.Descriptor instead.
func (*FindRequest_BitcoinLikeParams) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{2, 2}
}

func (x *FindRequest_BitcoinLikeParams) GetFilterByAddress() bool {
	if x != nil && x.FilterByAddress != nil {
		return *x.FilterByAddress
	}
	return false
}

func (x *FindRequest_BitcoinLikeParams) GetFilterByMempool() bool {
	if x != nil && x.FilterByMempool != nil {
		return *x.FilterByMempool
	}
	return false
}

type SuggestTxFeeResponse_TronFeeData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TRC20 token transaction costs
	EnergyUsage    uint64 `protobuf:"varint,1,opt,name=energy_usage,json=energyUsage,proto3" json:"energy_usage,omitempty"`          // Energy consumption for the transaction
	BandwidthUsage uint64 `protobuf:"varint,2,opt,name=bandwidth_usage,json=bandwidthUsage,proto3" json:"bandwidth_usage,omitempty"` // Bandwidth consumption for the transaction
	BurnTrxFee     string `protobuf:"bytes,3,opt,name=burn_trx_fee,json=burnTrxFee,proto3" json:"burn_trx_fee,omitempty"`            // TRX burned as fee (in TRX)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SuggestTxFeeResponse_TronFeeData) Reset() {
	*x = SuggestTxFeeResponse_TronFeeData{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestTxFeeResponse_TronFeeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestTxFeeResponse_TronFeeData) ProtoMessage() {}

func (x *SuggestTxFeeResponse_TronFeeData) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestTxFeeResponse_TronFeeData.ProtoReflect.Descriptor instead.
func (*SuggestTxFeeResponse_TronFeeData) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{5, 0}
}

func (x *SuggestTxFeeResponse_TronFeeData) GetEnergyUsage() uint64 {
	if x != nil {
		return x.EnergyUsage
	}
	return 0
}

func (x *SuggestTxFeeResponse_TronFeeData) GetBandwidthUsage() uint64 {
	if x != nil {
		return x.BandwidthUsage
	}
	return 0
}

func (x *SuggestTxFeeResponse_TronFeeData) GetBurnTrxFee() string {
	if x != nil {
		return x.BurnTrxFee
	}
	return ""
}

type SuggestTxFeeResponse_EVMFeeData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestTxFeeResponse_EVMFeeData) Reset() {
	*x = SuggestTxFeeResponse_EVMFeeData{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestTxFeeResponse_EVMFeeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestTxFeeResponse_EVMFeeData) ProtoMessage() {}

func (x *SuggestTxFeeResponse_EVMFeeData) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestTxFeeResponse_EVMFeeData.ProtoReflect.Descriptor instead.
func (*SuggestTxFeeResponse_EVMFeeData) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{5, 1}
}

type SuggestTxFeeResponse_BitcoinLikeFeeData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FeeRate       uint64                 `protobuf:"varint,1,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`                   // Fee rate in satoshis per byte
	EstimatedSize uint32                 `protobuf:"varint,2,opt,name=estimated_size,json=estimatedSize,proto3" json:"estimated_size,omitempty"` // Estimated transaction size in bytes
	Priority      string                 `protobuf:"bytes,3,opt,name=priority,proto3" json:"priority,omitempty"`                                 // Priority level: "low", "medium", "high"
	UtxoCount     uint32                 `protobuf:"varint,4,opt,name=utxo_count,json=utxoCount,proto3" json:"utxo_count,omitempty"`             // Number of UTXOs used (affects size calculation)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SuggestTxFeeResponse_BitcoinLikeFeeData) Reset() {
	*x = SuggestTxFeeResponse_BitcoinLikeFeeData{}
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SuggestTxFeeResponse_BitcoinLikeFeeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestTxFeeResponse_BitcoinLikeFeeData) ProtoMessage() {}

func (x *SuggestTxFeeResponse_BitcoinLikeFeeData) ProtoReflect() protoreflect.Message {
	mi := &file_eproxy_transactions_v2_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestTxFeeResponse_BitcoinLikeFeeData.ProtoReflect.Descriptor instead.
func (*SuggestTxFeeResponse_BitcoinLikeFeeData) Descriptor() ([]byte, []int) {
	return file_eproxy_transactions_v2_service_proto_rawDescGZIP(), []int{5, 2}
}

func (x *SuggestTxFeeResponse_BitcoinLikeFeeData) GetFeeRate() uint64 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

func (x *SuggestTxFeeResponse_BitcoinLikeFeeData) GetEstimatedSize() uint32 {
	if x != nil {
		return x.EstimatedSize
	}
	return 0
}

func (x *SuggestTxFeeResponse_BitcoinLikeFeeData) GetPriority() string {
	if x != nil {
		return x.Priority
	}
	return ""
}

func (x *SuggestTxFeeResponse_BitcoinLikeFeeData) GetUtxoCount() uint32 {
	if x != nil {
		return x.UtxoCount
	}
	return 0
}

var File_eproxy_transactions_v2_service_proto protoreflect.FileDescriptor

const file_eproxy_transactions_v2_service_proto_rawDesc = "" +
	"\n" +
	"$eproxy/transactions/v2/service.proto\x12\x16eproxy.transactions.v2\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1deproxy/common/v2/common.proto\x1a(eproxy/transactions/v2/transaction.proto\"l\n" +
	"\x0eGetInfoRequest\x12A\n" +
	"\n" +
	"blockchain\x18\x01 \x01(\x0e2\x1c.eproxy.common.v2.BlockchainB\x03\xe0A\x02R\n" +
	"blockchain\x12\x17\n" +
	"\x04hash\x18\x02 \x01(\tB\x03\xe0A\x02R\x04hash\"X\n" +
	"\x0fGetInfoResponse\x12E\n" +
	"\vtransaction\x18\x01 \x01(\v2#.eproxy.transactions.v2.TransactionR\vtransaction\"\xd6\b\n" +
	"\vFindRequest\x12A\n" +
	"\n" +
	"blockchain\x18\x01 \x01(\x0e2\x1c.eproxy.common.v2.BlockchainB\x03\xe0A\x02R\n" +
	"blockchain\x12@\n" +
	"\x06common\x18\x02 \x01(\v2#.eproxy.common.v2.FindRequestCommonB\x03\xe0A\x02R\x06common\x12\x1b\n" +
	"\x06search\x18\x03 \x01(\tH\x00R\x06search\x88\x01\x01\x12\x17\n" +
	"\x04hash\x18\x04 \x01(\tH\x01R\x04hash\x88\x01\x01\x12&\n" +
	"\fblock_height\x18\x05 \x01(\x04H\x02R\vblockHeight\x88\x01\x01\x123\n" +
	"\x13block_height_offset\x18\x06 \x01(\x04H\x03R\x11blockHeightOffset\x88\x01\x01\x12\x1d\n" +
	"\aaddress\x18\a \x01(\tH\x04R\aaddress\x88\x01\x01\x12.\n" +
	"\x10contract_address\x18\b \x01(\tH\x05R\x0fcontractAddress\x88\x01\x01\x12(\n" +
	"\rcontract_type\x18\t \x01(\rH\x06R\fcontractType\x88\x01\x01\x12;\n" +
	"\x1ais_include_additional_data\x18\n" +
	" \x01(\bR\x17isIncludeAdditionalData\x12T\n" +
	"\vtron_params\x18\v \x01(\v2..eproxy.transactions.v2.FindRequest.TronParamsH\aR\n" +
	"tronParams\x88\x01\x01\x12Q\n" +
	"\n" +
	"evm_params\x18\f \x01(\v2-.eproxy.transactions.v2.FindRequest.EVMParamsH\bR\tevmParams\x88\x01\x01\x12j\n" +
	"\x13bitcoin_like_params\x18\r \x01(\v25.eproxy.transactions.v2.FindRequest.BitcoinLikeParamsH\tR\x11bitcoinLikeParams\x88\x01\x01\x1a\f\n" +
	"\n" +
	"TronParams\x1a\v\n" +
	"\tEVMParams\x1a\xa1\x01\n" +
	"\x11BitcoinLikeParams\x12/\n" +
	"\x11filter_by_address\x18\x01 \x01(\bH\x00R\x0ffilterByAddress\x88\x01\x01\x12/\n" +
	"\x11filter_by_mempool\x18\x02 \x01(\bH\x01R\x0ffilterByMempool\x88\x01\x01B\x14\n" +
	"\x12_filter_by_addressB\x14\n" +
	"\x12_filter_by_mempoolB\t\n" +
	"\a_searchB\a\n" +
	"\x05_hashB\x0f\n" +
	"\r_block_heightB\x16\n" +
	"\x14_block_height_offsetB\n" +
	"\n" +
	"\b_addressB\x13\n" +
	"\x11_contract_addressB\x10\n" +
	"\x0e_contract_typeB\x0e\n" +
	"\f_tron_paramsB\r\n" +
	"\v_evm_paramsB\x16\n" +
	"\x14_bitcoin_like_params\"s\n" +
	"\fFindResponse\x129\n" +
	"\x05items\x18\x01 \x03(\v2#.eproxy.transactions.v2.TransactionR\x05items\x12(\n" +
	"\x10next_page_exists\x18\x02 \x01(\bR\x0enextPageExists\"}\n" +
	"\x13SuggestTxFeeRequest\x12A\n" +
	"\n" +
	"blockchain\x18\x01 \x01(\x0e2\x1c.eproxy.common.v2.BlockchainB\x03\xe0A\x02R\n" +
	"blockchain\x12#\n" +
	"\n" +
	"identifier\x18\x02 \x01(\tB\x03\xe0A\x02R\n" +
	"identifier\"\xf8\x04\n" +
	"\x14SuggestTxFeeResponse\x12\x10\n" +
	"\x03fee\x18\x01 \x01(\tR\x03fee\x12W\n" +
	"\ttron_data\x18\x02 \x01(\v28.eproxy.transactions.v2.SuggestTxFeeResponse.TronFeeDataH\x00R\btronData\x12T\n" +
	"\bevm_data\x18\x03 \x01(\v27.eproxy.transactions.v2.SuggestTxFeeResponse.EVMFeeDataH\x00R\aevmData\x12m\n" +
	"\x11bitcoin_like_data\x18\x04 \x01(\v2?.eproxy.transactions.v2.SuggestTxFeeResponse.BitcoinLikeFeeDataH\x00R\x0fbitcoinLikeData\x1a{\n" +
	"\vTronFeeData\x12!\n" +
	"\fenergy_usage\x18\x01 \x01(\x04R\venergyUsage\x12'\n" +
	"\x0fbandwidth_usage\x18\x02 \x01(\x04R\x0ebandwidthUsage\x12 \n" +
	"\fburn_trx_fee\x18\x03 \x01(\tR\n" +
	"burnTrxFee\x1a\f\n" +
	"\n" +
	"EVMFeeData\x1a\x91\x01\n" +
	"\x12BitcoinLikeFeeData\x12\x19\n" +
	"\bfee_rate\x18\x01 \x01(\x04R\afeeRate\x12%\n" +
	"\x0eestimated_size\x18\x02 \x01(\rR\restimatedSize\x12\x1a\n" +
	"\bpriority\x18\x03 \x01(\tR\bpriority\x12\x1d\n" +
	"\n" +
	"utxo_count\x18\x04 \x01(\rR\tutxoCountB\x11\n" +
	"\x0fadditional_data2\xaf\x02\n" +
	"\x13TransactionsService\x12Q\n" +
	"\x04Find\x12#.eproxy.transactions.v2.FindRequest\x1a$.eproxy.transactions.v2.FindResponse\x12Z\n" +
	"\aGetInfo\x12&.eproxy.transactions.v2.GetInfoRequest\x1a'.eproxy.transactions.v2.GetInfoResponse\x12i\n" +
	"\fSuggestTxFee\x12+.eproxy.transactions.v2.SuggestTxFeeRequest\x1a,.eproxy.transactions.v2.SuggestTxFeeResponseB\xed\x01\n" +
	"\x1acom.eproxy.transactions.v2B\fServiceProtoP\x01ZGgithub.com/dv-net/dv-proto/gen/go/eproxy/transactions/v2;transactionsv2\xa2\x02\x03ETX\xaa\x02\x16Eproxy.Transactions.V2\xca\x02\x16Eproxy\\Transactions\\V2\xe2\x02\"Eproxy\\Transactions\\V2\\GPBMetadata\xea\x02\x18Eproxy::Transactions::V2b\x06proto3"

var (
	file_eproxy_transactions_v2_service_proto_rawDescOnce sync.Once
	file_eproxy_transactions_v2_service_proto_rawDescData []byte
)

func file_eproxy_transactions_v2_service_proto_rawDescGZIP() []byte {
	file_eproxy_transactions_v2_service_proto_rawDescOnce.Do(func() {
		file_eproxy_transactions_v2_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_eproxy_transactions_v2_service_proto_rawDesc), len(file_eproxy_transactions_v2_service_proto_rawDesc)))
	})
	return file_eproxy_transactions_v2_service_proto_rawDescData
}

var file_eproxy_transactions_v2_service_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_eproxy_transactions_v2_service_proto_goTypes = []any{
	(*GetInfoRequest)(nil),                          // 0: eproxy.transactions.v2.GetInfoRequest
	(*GetInfoResponse)(nil),                         // 1: eproxy.transactions.v2.GetInfoResponse
	(*FindRequest)(nil),                             // 2: eproxy.transactions.v2.FindRequest
	(*FindResponse)(nil),                            // 3: eproxy.transactions.v2.FindResponse
	(*SuggestTxFeeRequest)(nil),                     // 4: eproxy.transactions.v2.SuggestTxFeeRequest
	(*SuggestTxFeeResponse)(nil),                    // 5: eproxy.transactions.v2.SuggestTxFeeResponse
	(*FindRequest_TronParams)(nil),                  // 6: eproxy.transactions.v2.FindRequest.TronParams
	(*FindRequest_EVMParams)(nil),                   // 7: eproxy.transactions.v2.FindRequest.EVMParams
	(*FindRequest_BitcoinLikeParams)(nil),           // 8: eproxy.transactions.v2.FindRequest.BitcoinLikeParams
	(*SuggestTxFeeResponse_TronFeeData)(nil),        // 9: eproxy.transactions.v2.SuggestTxFeeResponse.TronFeeData
	(*SuggestTxFeeResponse_EVMFeeData)(nil),         // 10: eproxy.transactions.v2.SuggestTxFeeResponse.EVMFeeData
	(*SuggestTxFeeResponse_BitcoinLikeFeeData)(nil), // 11: eproxy.transactions.v2.SuggestTxFeeResponse.BitcoinLikeFeeData
	(v2.Blockchain)(0),                              // 12: eproxy.common.v2.Blockchain
	(*Transaction)(nil),                             // 13: eproxy.transactions.v2.Transaction
	(*v2.FindRequestCommon)(nil),                    // 14: eproxy.common.v2.FindRequestCommon
}
var file_eproxy_transactions_v2_service_proto_depIdxs = []int32{
	12, // 0: eproxy.transactions.v2.GetInfoRequest.blockchain:type_name -> eproxy.common.v2.Blockchain
	13, // 1: eproxy.transactions.v2.GetInfoResponse.transaction:type_name -> eproxy.transactions.v2.Transaction
	12, // 2: eproxy.transactions.v2.FindRequest.blockchain:type_name -> eproxy.common.v2.Blockchain
	14, // 3: eproxy.transactions.v2.FindRequest.common:type_name -> eproxy.common.v2.FindRequestCommon
	6,  // 4: eproxy.transactions.v2.FindRequest.tron_params:type_name -> eproxy.transactions.v2.FindRequest.TronParams
	7,  // 5: eproxy.transactions.v2.FindRequest.evm_params:type_name -> eproxy.transactions.v2.FindRequest.EVMParams
	8,  // 6: eproxy.transactions.v2.FindRequest.bitcoin_like_params:type_name -> eproxy.transactions.v2.FindRequest.BitcoinLikeParams
	13, // 7: eproxy.transactions.v2.FindResponse.items:type_name -> eproxy.transactions.v2.Transaction
	12, // 8: eproxy.transactions.v2.SuggestTxFeeRequest.blockchain:type_name -> eproxy.common.v2.Blockchain
	9,  // 9: eproxy.transactions.v2.SuggestTxFeeResponse.tron_data:type_name -> eproxy.transactions.v2.SuggestTxFeeResponse.TronFeeData
	10, // 10: eproxy.transactions.v2.SuggestTxFeeResponse.evm_data:type_name -> eproxy.transactions.v2.SuggestTxFeeResponse.EVMFeeData
	11, // 11: eproxy.transactions.v2.SuggestTxFeeResponse.bitcoin_like_data:type_name -> eproxy.transactions.v2.SuggestTxFeeResponse.BitcoinLikeFeeData
	2,  // 12: eproxy.transactions.v2.TransactionsService.Find:input_type -> eproxy.transactions.v2.FindRequest
	0,  // 13: eproxy.transactions.v2.TransactionsService.GetInfo:input_type -> eproxy.transactions.v2.GetInfoRequest
	4,  // 14: eproxy.transactions.v2.TransactionsService.SuggestTxFee:input_type -> eproxy.transactions.v2.SuggestTxFeeRequest
	3,  // 15: eproxy.transactions.v2.TransactionsService.Find:output_type -> eproxy.transactions.v2.FindResponse
	1,  // 16: eproxy.transactions.v2.TransactionsService.GetInfo:output_type -> eproxy.transactions.v2.GetInfoResponse
	5,  // 17: eproxy.transactions.v2.TransactionsService.SuggestTxFee:output_type -> eproxy.transactions.v2.SuggestTxFeeResponse
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_eproxy_transactions_v2_service_proto_init() }
func file_eproxy_transactions_v2_service_proto_init() {
	if File_eproxy_transactions_v2_service_proto != nil {
		return
	}
	file_eproxy_transactions_v2_transaction_proto_init()
	file_eproxy_transactions_v2_service_proto_msgTypes[2].OneofWrappers = []any{}
	file_eproxy_transactions_v2_service_proto_msgTypes[5].OneofWrappers = []any{
		(*SuggestTxFeeResponse_TronData)(nil),
		(*SuggestTxFeeResponse_EvmData)(nil),
		(*SuggestTxFeeResponse_BitcoinLikeData)(nil),
	}
	file_eproxy_transactions_v2_service_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_eproxy_transactions_v2_service_proto_rawDesc), len(file_eproxy_transactions_v2_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eproxy_transactions_v2_service_proto_goTypes,
		DependencyIndexes: file_eproxy_transactions_v2_service_proto_depIdxs,
		MessageInfos:      file_eproxy_transactions_v2_service_proto_msgTypes,
	}.Build()
	File_eproxy_transactions_v2_service_proto = out.File
	file_eproxy_transactions_v2_service_proto_goTypes = nil
	file_eproxy_transactions_v2_service_proto_depIdxs = nil
}
